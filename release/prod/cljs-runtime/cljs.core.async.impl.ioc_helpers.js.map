{"version":3,"file":"cljs.core.async.impl.ioc_helpers.js","sources":["cljs/core/async/impl/ioc_helpers.cljs"],"mappings":"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","names":["cljs.core.async.impl.ioc-helpers/FN-IDX","cljs.core.async.impl.ioc-helpers/STATE-IDX","cljs.core.async.impl.ioc-helpers/VALUE-IDX","cljs.core.async.impl.ioc-helpers/BINDINGS-IDX","cljs.core.async.impl.ioc-helpers/EXCEPTION-FRAMES","cljs.core.async.impl.ioc-helpers/CURRENT-EXCEPTION","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/aset-object","arr","idx","o","cljs.core.async.impl.ioc-helpers/aget-object","cljs.core.async.impl.ioc-helpers/finished?","state-array","cljs.core/keyword-identical?","cljs.core.async.impl.ioc-helpers/fn-handler","f","cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers32276","_32278","meta32277","cljs.core/PROTOCOL_SENTINEL","this__5797__auto__","writer__5798__auto__","opt__5799__auto__","cljs.core/-write","cljs.core.async.impl.ioc-helpers/->t_cljs$core$async$impl$ioc_helpers32276","_","cljs.core.async.impl.ioc-helpers/run-state-machine","state","fexpr__32279","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","e32280","js/Object","ex","cljs.core.async.impl.ioc-helpers/take!","blk","c","temp__5455__auto__","cb","x","statearr-32281","statearr-32282","cljs.core/deref","cljs.core.async.impl.ioc-helpers/put!","val","ret-val","statearr-32285","statearr-32286","cljs.core.async.impl.ioc-helpers/return-chan","value","this__18321__auto__","k__18322__auto__","cljs.core._lookup.cljs$core$IFn$_invoke$arity$3","this__18323__auto__","k32293","else__18324__auto__","G__32297","cljs.core/Keyword","catch-block","catch-exception","finally-block","continue-block","prev","cljs.core.get.cljs$core$IFn$_invoke$arity$3","__extmap","this__18335__auto__","writer__18336__auto__","opts__18337__auto__","pr-pair__18338__auto__","keyval__18339__auto__","cljs.core/pr-sequential-writer","cljs.core/pr-writer","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/PersistentVector","G__32292","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__18319__auto__","__meta","this__18316__auto__","__hash","this__18325__auto__","cljs.core/count","this__18317__auto__","h__5582__auto__","fexpr__32298","coll__18318__auto__","cljs.core/hash-unordered-coll","this32294","other32295","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","this__18330__auto__","k__18331__auto__","cljs.core/contains?","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core/-with-meta","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core/not-empty","this__18328__auto__","k__18329__auto__","pred__32299","expr__32300","G__32302","G__32303","G__32308","G__32309","G__32310","G__32311","G__32312","G__32313","G__32314","G__32315","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","this__18333__auto__","cljs.core/seq","this__18320__auto__","this__18326__auto__","entry__18327__auto__","cljs.core/vector?","cljs.core/-assoc","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","cljs.core/-conj","cljs.core.async.impl.ioc-helpers/ExceptionFrame","this__5852__auto__","writer__5853__auto__","G__32296","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core.async.impl.ioc-helpers/->ExceptionFrame","cljs.core.async.impl.ioc-helpers/map->ExceptionFrame","cljs.core.async.impl.ioc-helpers/add-exception-frame","statearr-32351","cljs.core.async.impl.ioc-helpers/process-exception","exception-frame","exception","and__5114__auto__","cljs.core/not","statearr-32352","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","statearr-32354","statearr-32360","statearr-32366","statearr-32374","js/Error","cljs.core/List"],"sourcesContent":["(ns cljs.core.async.impl.ioc-helpers\n  (:require [cljs.core.async.impl.protocols :as impl])\n  (:require-macros [cljs.core.async.impl.ioc-macros :as ioc]))\n\n(def ^:const FN-IDX 0)\n(def ^:const STATE-IDX 1)\n(def ^:const VALUE-IDX 2)\n(def ^:const BINDINGS-IDX 3)\n(def ^:const EXCEPTION-FRAMES 4)\n(def ^:const CURRENT-EXCEPTION 5)\n(def ^:const USER-START-IDX 6)\n\n(defn aset-object [arr idx o]\n  (aget arr idx o))\n\n(defn aget-object [arr idx]\n  (aget arr idx))\n\n\n(defn finished?\n  \"Returns true if the machine is in a finished state\"\n  [state-array]\n  (keyword-identical? (aget state-array STATE-IDX) :finished))\n\n(defn- fn-handler\n  [f]\n  (reify\n   impl/Handler\n   (active? [_] true)\n   (blockable? [_] true)\n   (commit [_] f)))\n\n\n(defn run-state-machine [state]\n  ((aget-object state FN-IDX) state))\n\n(defn run-state-machine-wrapped [state]\n  (try\n    (run-state-machine state)\n    (catch js/Object ex\n      (impl/close! ^not-native (aget-object state USER-START-IDX))\n      (throw ex))))\n\n(defn take! [state blk ^not-native c]\n  (if-let [cb (impl/take! c (fn-handler\n                                   (fn [x]\n                                     (ioc/aset-all! state VALUE-IDX x STATE-IDX blk)\n                                     (run-state-machine-wrapped state))))]\n    (do (ioc/aset-all! state VALUE-IDX @cb STATE-IDX blk)\n        :recur)\n    nil))\n\n(defn put! [state blk ^not-native c val]\n  (if-let [cb (impl/put! c val (fn-handler (fn [ret-val]\n                                             (ioc/aset-all! state VALUE-IDX ret-val STATE-IDX blk)\n                                             (run-state-machine-wrapped state))))]\n    (do (ioc/aset-all! state VALUE-IDX @cb STATE-IDX blk)\n        :recur)\n    nil))\n\n(defn return-chan [state value]\n  (let [^not-native c (aget state USER-START-IDX)]\n           (when-not (nil? value)\n             (impl/put! c value (fn-handler (fn [] nil))))\n           (impl/close! c)\n           c))\n\n(defrecord ExceptionFrame [catch-block\n                           ^Class catch-exception\n                           finally-block\n                           continue-block\n                           prev])\n\n(defn add-exception-frame [state catch-block catch-exception finally-block continue-block]\n  (ioc/aset-all! state\n                 EXCEPTION-FRAMES\n                 (->ExceptionFrame catch-block\n                                   catch-exception\n                                   finally-block\n                                   continue-block\n                                   (aget-object state EXCEPTION-FRAMES))))\n\n(defn process-exception [state]\n  (let [exception-frame (aget-object state EXCEPTION-FRAMES)\n        catch-block (:catch-block exception-frame)\n        catch-exception (:catch-exception exception-frame)\n        exception (aget-object state CURRENT-EXCEPTION)]\n    (cond\n     (and exception\n          (not exception-frame))\n     (throw exception)\n\n     (and exception\n          catch-block\n          (or (= :default catch-exception)\n              (instance? catch-exception exception)))\n     (ioc/aset-all! state\n                    STATE-IDX\n                    catch-block\n                    VALUE-IDX\n                    exception\n                    CURRENT-EXCEPTION\n                    nil\n                    EXCEPTION-FRAMES\n                    (assoc exception-frame\n                      :catch-block nil\n                      :catch-exception nil))\n\n\n     (and exception\n          (not catch-block)\n          (not (:finally-block exception-frame)))\n\n     (do (ioc/aset-all! state\n                        EXCEPTION-FRAMES\n                        (:prev exception-frame))\n         (recur state))\n\n     (and exception\n          (not catch-block)\n          (:finally-block exception-frame))\n     (ioc/aset-all! state\n                    STATE-IDX\n                    (:finally-block exception-frame)\n                    EXCEPTION-FRAMES\n                    (assoc exception-frame\n                      :finally-block nil))\n\n     (and (not exception)\n          (:finally-block exception-frame))\n     (do (ioc/aset-all! state\n                        STATE-IDX\n                        (:finally-block exception-frame)\n                        EXCEPTION-FRAMES\n                        (assoc exception-frame\n                          :finally-block nil)))\n\n     (and (not exception)\n          (not (:finally-block exception-frame)))\n     (do (ioc/aset-all! state\n                   STATE-IDX\n                   (:continue-block exception-frame)\n                   EXCEPTION-FRAMES\n                   (:prev exception-frame)))\n\n     :else (throw (js/Error. \"No matching clause\")))))\n"]}