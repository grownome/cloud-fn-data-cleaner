["^ ","~:output",["^ ","~:js","goog.provide('promesa.core');\ngoog.require('cljs.core');\ngoog.require('promesa.protocols');\ngoog.require('promesa.impl');\ngoog.require('promesa.impl.scheduler');\npromesa.core.Promise = promesa.impl.Promise;\n/**\n * Schedule a callable to be executed after the `ms` delay\n *   is reached.\n * \n *   In JVM it uses a scheduled executor service and in JS\n *   it uses the `setTimeout` function.\n */\npromesa.core.schedule = (function promesa$core$schedule(ms,func){\nreturn promesa.impl.scheduler.schedule(ms,func);\n});\n/**\n * Return a resolved promise with provided value.\n */\npromesa.core.resolved = (function promesa$core$resolved(v){\nreturn promesa.impl.resolved(v);\n});\n/**\n * Return a rejected promise with provided reason.\n */\npromesa.core.rejected = (function promesa$core$rejected(v){\nreturn promesa.impl.rejected(v);\n});\n/**\n * The promise constructor.\n */\npromesa.core.promise = (function promesa$core$promise(v){\nreturn promesa.protocols._promise(v);\n});\n/**\n * Return true if `v` is a promise instance.\n */\npromesa.core.promise_QMARK_ = (function promesa$core$promise_QMARK_(v){\nreturn (v instanceof promesa.core.Promise);\n});\n/**\n * Returns true if promise `p` is already fulfilled.\n */\npromesa.core.resolved_QMARK_ = (function promesa$core$resolved_QMARK_(p){\nreturn promesa.protocols._resolved_QMARK_(p);\n});\n/**\n * Returns true if promise `p` is already rejected.\n */\npromesa.core.rejected_QMARK_ = (function promesa$core$rejected_QMARK_(p){\nreturn promesa.protocols._rejected_QMARK_(p);\n});\n/**\n * Returns true if promise `p` is stil pending.\n */\npromesa.core.pending_QMARK_ = (function promesa$core$pending_QMARK_(p){\nreturn promesa.protocols._pending_QMARK_(p);\n});\n/**\n * Returns the current promise value.\n */\npromesa.core.extract = (function promesa$core$extract(p){\nreturn promesa.protocols._extract(p);\n});\n/**\n * Returns true if promise `p` is already done.\n */\npromesa.core.done_QMARK_ = cljs.core.complement(promesa.core.pending_QMARK_);\n/**\n * Apply a function to the promise value and\n *   return a new promise with the result.\n */\npromesa.core.map = (function promesa$core$map(f,p){\nreturn promesa.protocols._map(p,f);\n});\n/**\n * Same as `map` but removes one level of\n *   promise neesting. Useful when the map function\n *   returns a promise instead of value.\n * \n *   In JS environment this function is analogous\n *   to `map` because the promise abstraction overloads\n *   the `map` operator.\n */\npromesa.core.mapcat = (function promesa$core$mapcat(f,p){\nreturn promesa.protocols._bind(p,f);\n});\n/**\n * A chain helper for promises.\n */\npromesa.core.bind = (function promesa$core$bind(p,f){\nreturn promesa.protocols._bind(p,f);\n});\n/**\n * Similar to `map` but with parameters inverted\n *   for convenience and for familiarity with\n *   javascript's promises `.then` operator.\n * \n *   Unlike Clojure's `map`, will resolve any promises\n *   returned  by `f`.\n */\npromesa.core.then = (function promesa$core$then(p,f){\nreturn promesa.protocols._map(p,f);\n});\n/**\n * Like then but accepts multiple parameters.\n */\npromesa.core.chain = (function promesa$core$chain(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___4918 = arguments.length;\nvar i__4532__auto___4919 = (0);\nwhile(true){\nif((i__4532__auto___4919 < len__4531__auto___4918)){\nargs__4534__auto__.push((arguments[i__4532__auto___4919]));\n\nvar G__4920 = (i__4532__auto___4919 + (1));\ni__4532__auto___4919 = G__4920;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\npromesa.core.chain.cljs$core$IFn$_invoke$arity$variadic = (function (p,funcs){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__4887_SHARP_,p2__4888_SHARP_){\nreturn promesa.core.then(p1__4887_SHARP_,p2__4888_SHARP_);\n}),p,funcs);\n});\n\npromesa.core.chain.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\npromesa.core.chain.cljs$lang$applyTo = (function (seq4890){\nvar G__4891 = cljs.core.first(seq4890);\nvar seq4890__$1 = cljs.core.next(seq4890);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4891,seq4890__$1);\n});\n\npromesa.core.branch = (function promesa$core$branch(p,success,failure){\nreturn promesa.protocols._catch(promesa.protocols._map(p,success),failure);\n});\n/**\n * Catch all promise chain helper.\n */\npromesa.core.catch$ = (function promesa$core$catch(var_args){\nvar G__4930 = arguments.length;\nswitch (G__4930) {\ncase 2:\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.catch$.cljs$core$IFn$_invoke$arity$2 = (function (p,f){\nreturn promesa.protocols._catch(p,f);\n});\n\npromesa.core.catch$.cljs$core$IFn$_invoke$arity$3 = (function (p,pred_or_type,f){\nvar accept_QMARK_ = ((cljs.core.ifn_QMARK_(pred_or_type))?pred_or_type:(function (p1__4928_SHARP_){\nreturn (p1__4928_SHARP_ instanceof pred_or_type);\n}));\nreturn promesa.protocols._catch(p,((function (accept_QMARK_){\nreturn (function (e){\nif(cljs.core.truth_((accept_QMARK_.cljs$core$IFn$_invoke$arity$1 ? accept_QMARK_.cljs$core$IFn$_invoke$arity$1(e) : accept_QMARK_.call(null,e)))){\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(e) : f.call(null,e));\n} else {\nreturn promesa.impl.rejected(e);\n}\n});})(accept_QMARK_))\n);\n});\n\npromesa.core.catch$.cljs$lang$maxFixedArity = 3;\n\n/**\n * Same as `catch` but with parameters inverted.\n */\npromesa.core.error = (function promesa$core$error(var_args){\nvar G__4942 = arguments.length;\nswitch (G__4942) {\ncase 2:\nreturn promesa.core.error.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn promesa.core.error.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.error.cljs$core$IFn$_invoke$arity$2 = (function (f,p){\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2(p,f);\n});\n\npromesa.core.error.cljs$core$IFn$_invoke$arity$3 = (function (f,type,p){\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$3(p,type,f);\n});\n\npromesa.core.error.cljs$lang$maxFixedArity = 3;\n\n/**\n * A short alias for `error` function.\n */\npromesa.core.err = promesa.core.error;\n/**\n * Attach handler to promise that will be\n *   executed independently if promise is\n *   resolved or rejected.\n */\npromesa.core.finally$ = (function promesa$core$finally(p,callback){\nreturn p.lastly(callback);\n});\n/**\n * Given an array of promises, return a promise\n *   that is fulfilled  when all the items in the\n *   array are fulfilled.\n * \n *   Example:\n * \n *   (-> (all [(promise :first-promise)\n *          (promise :second-promise)]\n *    (then (fn [[first-result second-result]]))\n *     (println (str first-result \", \" second-result)\n * \n *   Will print out\n *   :first-promise, :second-promise.\n * \n *   If at least one of the promises is rejected, the resulting promise will be\n *   rejected.\n */\npromesa.core.all = (function promesa$core$all(promises){\nreturn promesa.core.then(promesa.core.Promise.all(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(promises)),cljs.core.vec);\n});\n/**\n * Given an array of promises, return a promise\n *   that is fulfilled when first one item in the\n *   array is fulfilled.\n */\npromesa.core.any = (function promesa$core$any(promises){\nreturn promesa.core.Promise.any(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(promises));\n});\n/**\n * Cancel the promise.\n */\npromesa.core.cancel_BANG_ = (function promesa$core$cancel_BANG_(p){\npromesa.protocols._cancel(p);\n\nreturn p;\n});\n/**\n * Return true if `v` is a cancelled promise.\n */\npromesa.core.cancelled_QMARK_ = (function promesa$core$cancelled_QMARK_(v){\nreturn promesa.protocols._cancelled_QMARK_(v);\n});\n/**\n * Given a function that accepts a callback as the last argument return other\n *   function that returns a promise. Callback is expected to take single\n *   parameter (result of a computation).\n */\npromesa.core.promisify = (function promesa$core$promisify(callable){\nreturn (function() { \nvar G__4968__delegate = function (args){\nreturn promesa.core.promise((function (resolve,reject){\nvar args__$1 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(args),resolve);\ntry{return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(callable,args__$1);\n}catch (e4967){if((e4967 instanceof Error)){\nvar e = e4967;\nreturn (reject.cljs$core$IFn$_invoke$arity$1 ? reject.cljs$core$IFn$_invoke$arity$1(e) : reject.call(null,e));\n} else {\nthrow e4967;\n\n}\n}}));\n};\nvar G__4968 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__4969__i = 0, G__4969__a = new Array(arguments.length -  0);\nwhile (G__4969__i < G__4969__a.length) {G__4969__a[G__4969__i] = arguments[G__4969__i + 0]; ++G__4969__i;}\n  args = new cljs.core.IndexedSeq(G__4969__a,0,null);\n} \nreturn G__4968__delegate.call(this,args);};\nG__4968.cljs$lang$maxFixedArity = 0;\nG__4968.cljs$lang$applyTo = (function (arglist__4970){\nvar args = cljs.core.seq(arglist__4970);\nreturn G__4968__delegate(args);\n});\nG__4968.cljs$core$IFn$_invoke$arity$variadic = G__4968__delegate;\nreturn G__4968;\n})()\n;\n});\n/**\n * Returns a cancellable promise that will be fulfilled\n *   with this promise's fulfillment value or rejection reason.\n *   However, if this promise is not fulfilled or rejected\n *   within `ms` milliseconds, the returned promise is cancelled\n *   with a TimeoutError\n */\npromesa.core.timeout = (function promesa$core$timeout(var_args){\nvar G__4976 = arguments.length;\nswitch (G__4976) {\ncase 2:\nreturn promesa.core.timeout.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn promesa.core.timeout.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.timeout.cljs$core$IFn$_invoke$arity$2 = (function (p,t){\nreturn p.timeout(t);\n});\n\npromesa.core.timeout.cljs$core$IFn$_invoke$arity$3 = (function (p,t,v){\nreturn p.timeout(t,v);\n});\n\npromesa.core.timeout.cljs$lang$maxFixedArity = 3;\n\n/**\n * Given a timeout in miliseconds and optional\n *   value, returns a promise that will fulfilled\n *   with provided value (or nil) after the\n *   time is reached.\n */\npromesa.core.delay = (function promesa$core$delay(var_args){\nvar G__4983 = arguments.length;\nswitch (G__4983) {\ncase 1:\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.delay.cljs$core$IFn$_invoke$arity$1 = (function (t){\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$2(t,null);\n});\n\npromesa.core.delay.cljs$core$IFn$_invoke$arity$2 = (function (t,v){\nreturn promesa.core.promise((function (resolve,reject){\nreturn promesa.core.schedule(t,(function (){\nreturn (resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(v) : resolve.call(null,v));\n}));\n}));\n});\n\npromesa.core.delay.cljs$lang$maxFixedArity = 2;\n\n/**\n * A helper for start promise chain without worry about\n *   synchronous or asynchronous exceptions. Returns a promise\n *   resolved with the return value of the callback.\n */\npromesa.core.attempt = (function promesa$core$attempt(callback){\nreturn promesa.core.promise((function (resolve){\nvar G__4985 = (callback.cljs$core$IFn$_invoke$arity$0 ? callback.cljs$core$IFn$_invoke$arity$0() : callback.call(null));\nreturn (resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(G__4985) : resolve.call(null,G__4985));\n}));\n});\npromesa.core.await$ = (function promesa$core$await(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___4989 = arguments.length;\nvar i__4532__auto___4990 = (0);\nwhile(true){\nif((i__4532__auto___4990 < len__4531__auto___4989)){\nargs__4534__auto__.push((arguments[i__4532__auto___4990]));\n\nvar G__4991 = (i__4532__auto___4990 + (1));\ni__4532__auto___4990 = G__4991;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((0) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((0)),(0),null)):null);\nreturn promesa.core.await$.cljs$core$IFn$_invoke$arity$variadic(argseq__4535__auto__);\n});\n\npromesa.core.await$.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Should be only used in alet macro.\",cljs.core.PersistentArrayMap.EMPTY);\n});\n\npromesa.core.await$.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\npromesa.core.await$.cljs$lang$applyTo = (function (seq4988){\nvar self__4519__auto__ = this;\nreturn self__4519__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4988));\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","promesa/core.cljc","~:line",25,"~:column",5,"~:end-line",25,"~:end-column",17],"~:ns-aliases",["^ ","~$firebase-admin","~$shadow.js.shim.module$firebase_admin"],"~:use-macros",null,"~:excludes",["~#set",["~$map","~$delay","~$mapcat","~$await","~$spread","~$promise"]],"~:name","~$promesa.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$promesa.protocols","^M","~$pt","^M","~$promesa.impl","^O","~$impl","^O","~$promesa.impl.scheduler","^Q","~$ps","^Q","~$cljs.core","^S","~$goog","^T"],"~:seen",["^@",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^S","^S"],"~:form",["~#list",["~$ns","^H",["^Z",["~:refer-clojure","~:exclude",["^B","^E","^F","^D","^A","^C"]]],["^Z",["^V",["^M","~:as","^N"],["^O","^12","^P"],["^Q","^12","^R"]]]]],"~:flags",["^ ","^V",["^@",[]]],"~:js-deps",["^ "],"~:deps",["^T","^S","^M","^O","^Q"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","promesa/core.cljc"],"~:compiled-at",1535829918287,"~:resource-name","promesa/core.cljc","~:warnings",[],"~:source",";; Copyright (c) 2015-2016 Andrey Antukh <niwi@niwi.nz>\n;; All rights reserved.\n;;\n;; Redistribution and use in source and binary forms, with or without\n;; modification, are permitted provided that the following conditions\n;; are met:\n;;\n;; 1. Redistributions of source code must retain the above copyright\n;;    notice, this list of conditions and the following disclaimer.\n;; 2. Redistributions in binary form must reproduce the above copyright\n;;    notice, this list of conditions and the following disclaimer in the\n;;    documentation and/or other materials provided with the distribution.\n;;\n;; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n;; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n;; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n;; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n;; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n;; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n;; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n;; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n;; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n;; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n(ns promesa.core\n  (:refer-clojure :exclude [delay spread promise await map mapcat])\n  (:require [promesa.protocols :as pt]\n            [promesa.impl :as impl]\n            [promesa.impl.scheduler :as ps])\n  #?(:clj\n     (:import java.util.concurrent.CompletableFuture\n              java.util.concurrent.CompletionStage)))\n\n;; --- Global Constants\n\n#?(:clj\n   (defn set-executor!\n     \"Replace the default executor instance with\n     your own instance.\"\n     [executor]\n     (alter-var-root #'impl/+executor+ (constantly executor))))\n\n#?(:cljs (def ^:const Promise impl/Promise))\n\n;; --- Scheduling helpers\n\n(defn schedule\n  \"Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function.\"\n  [ms func]\n  (ps/schedule ms func))\n\n;; --- Promise\n\n(defn resolved\n  \"Return a resolved promise with provided value.\"\n  [v]\n  (impl/resolved v))\n\n(defn rejected\n  \"Return a rejected promise with provided reason.\"\n  [v]\n  (impl/rejected v))\n\n(defn promise\n  \"The promise constructor.\"\n  [v]\n  (pt/-promise v))\n\n(defn promise?\n  \"Return true if `v` is a promise instance.\"\n  [v]\n  #?(:clj (instance? CompletionStage v)\n     :cljs (instance? Promise v)))\n\n;; Predicates\n\n(defn resolved?\n  \"Returns true if promise `p` is already fulfilled.\"\n  [p]\n  (pt/-resolved? p))\n\n(defn rejected?\n  \"Returns true if promise `p` is already rejected.\"\n  [p]\n  (pt/-rejected? p))\n\n(defn pending?\n  \"Returns true if promise `p` is stil pending.\"\n  [p]\n  (pt/-pending? p))\n\n(defn extract\n  \"Returns the current promise value.\"\n  [p]\n  (pt/-extract p))\n\n(def done?\n  \"Returns true if promise `p` is already done.\"\n  (complement pending?))\n\n;; Chaining\n\n(defn map\n  \"Apply a function to the promise value and\n  return a new promise with the result.\"\n  [f p]\n  (pt/-map p f))\n\n(defn mapcat\n  \"Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator.\"\n  [f p]\n  (pt/-bind p f))\n\n(defn bind\n  \"A chain helper for promises.\"\n  [p f]\n  (pt/-bind p f))\n\n(defn then\n  \"Similar to `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator.\n\n  Unlike Clojure's `map`, will resolve any promises\n  returned  by `f`.\"\n  [p f]\n  #?(:cljs (pt/-map p f)\n     :clj  (pt/-bind p (fn promise-wrap [in]\n                         (let [out (f in)]\n                           (if (promise? out)\n                             out\n                             (promise out)))))))\n\n(defn chain\n  \"Like then but accepts multiple parameters.\"\n  [p & funcs]\n  (reduce #(then %1 %2) p funcs))\n\n(defn branch\n  [p success failure]\n  (-> p\n      (pt/-map success)\n      (pt/-catch failure)))\n\n(defn catch\n  \"Catch all promise chain helper.\"\n  ([p f]\n   (pt/-catch p f))\n  ([p pred-or-type f]\n   (let [accept? (if (ifn? pred-or-type)\n                   pred-or-type\n                   #(instance? pred-or-type %))]\n     (pt/-catch p (fn [e]\n                    (if (accept? e)\n                      (f e)\n                      (impl/rejected e)))))))\n\n(defn error\n  \"Same as `catch` but with parameters inverted.\"\n  ([f p] (catch p f))\n  ([f type p] (catch p type f)))\n\n(def err\n  \"A short alias for `error` function.\"\n  error)\n\n(defn finally\n  \"Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected.\"\n  [p callback]\n  #?(:clj (-> p\n              (then (fn [_] (callback)))\n              (catch (fn [_] (callback))))\n     :cljs (.lastly p callback)))\n\n(defn all\n  \"Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled.\n\n  Example:\n\n  (-> (all [(promise :first-promise)\n            (promise :second-promise)]\n      (then (fn [[first-result second-result]]))\n       (println (str first-result \\\", \\\" second-result)\n\n  Will print out\n  :first-promise, :second-promise.\n\n  If at least one of the promises is rejected, the resulting promise will be\n  rejected.\"\n  [promises]\n  #?(:cljs (-> (.all Promise (into-array promises))\n               (then vec))\n     :clj (let [promises (clojure.core/map pt/-promise promises)]\n            (then (->> (into-array CompletableFuture promises)\n                       (CompletableFuture/allOf))\n                  (fn [_]\n                    (mapv pt/-extract promises))))))\n\n(defn any\n  \"Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled.\"\n  [promises]\n  #?(:cljs (.any Promise (into-array promises))\n     :clj (->> (clojure.core/map pt/-promise promises)\n               (into-array CompletableFuture)\n               (CompletableFuture/anyOf))))\n\n;; Cancellation\n\n(defn cancel!\n  \"Cancel the promise.\"\n  [p]\n  (pt/-cancel p)\n  p)\n\n(defn cancelled?\n  \"Return true if `v` is a cancelled promise.\"\n  [v]\n  (pt/-cancelled? v))\n\n;; Utils\n\n(defn promisify\n  \"Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation).\"\n  [callable]\n  (fn [& args]\n    (promise (fn [resolve reject]\n               (let [args (-> (vec args)\n                              (conj resolve))]\n                 (try\n                   (apply callable args)\n                   (catch #?(:clj Throwable :cljs js/Error) e\n                       (reject e))))))))\n\n#?(:cljs\n   (defn timeout\n     \"Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError\"\n     ([p t] (.timeout p t))\n     ([p t v] (.timeout p t v))))\n\n(defn delay\n  \"Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached.\"\n  ([t] (delay t nil))\n  ([t v]\n   #?(:cljs (promise (fn [resolve reject]\n                       (schedule t #(resolve v))))\n\n      :clj  (let [p (CompletableFuture.)]\n              (schedule t #(.complete p v))\n              p))))\n\n(defn attempt\n  \"A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback.\"\n  [callback]\n  #?(:cljs (promise (fn [resolve] (resolve (callback))))\n     :clj  (promise (fn [resolve reject]\n                      (let [result (callback)]\n                        (if (promise? result)\n                          (then result resolve)\n                          (resolve result)))))))\n\n#?(:clj\n   (defmacro do*\n     \"A sugar syntax on top of `attempt`.\"\n     [& body]\n     `(attempt #(do ~@body))))\n\n(defn await\n  [& args]\n  (throw (ex-info \"Should be only used in alet macro.\" {})))\n\n#?(:clj\n   (defmacro alet\n     \"A `let` alternative that always returns promise and allows\n     use `await` marker function in order to emulate the async/await\n     syntax and make the let expression look like synchronous where\n     async operations are performed.\"\n     [bindings & body]\n     (let [await# `await]\n       (->> (reverse (partition 2 bindings))\n            (reduce (fn [acc [l r]]\n                      (if (and (coll? r)\n                               (symbol? (first r))\n                               (not= \".\" (subs (name (first r)) 0 1)))\n                        `(if (= ~await# ~(first r))\n                           (bind ~(second r) (fn [~l] ~acc))\n                           (let [~l ~r] ~acc))\n                        `(let [~l ~r] ~acc)))\n                    `(promise (do ~@body)))))))\n","~:reader-features",["^@",["~:cljs"]],"~:source-map",["^ ","~i42",["^ ","~i9",[["^ ","~:gcol",0,"~:gline",5]],"~i22",[["^ ","^1@",0,"^1A",5,"^G","promesa.core/Promise"]],"~i30",[["^ ","^1@",23,"^1A",5,"^G","promesa.impl/Promise"]]],"~i46",["^ ","~i0",[["^ ","^1@",0,"^1A",6],["^ ","^1@",24,"^1A",13],["^ ","^1@",0,"^1A",14]],"~i6",[["^ ","^1@",0,"^1A",13,"^G","promesa.core/schedule"]]],"~i52",["^ ","~i3",[["^ ","^1@",56,"^1A",13,"^G","ms"]],"~i6",[["^ ","^1@",59,"^1A",13,"^G","func"]]],"~i53",["^ ","~i2",[["^ ","^1@",0,"^1A",14]],"~i3",[["^ ","^1@",7,"^1A",14,"^G","promesa.impl.scheduler/schedule"]],"~i15",[["^ ","^1@",39,"^1A",14,"^G","ms"]],"~i18",[["^ ","^1@",42,"^1A",14,"^G","func"]]],"~i57",["^ ","~i0",[["^ ","^1@",0,"^1A",16],["^ ","^1@",24,"^1A",19],["^ ","^1@",0,"^1A",20]],"~i6",[["^ ","^1@",0,"^1A",19,"^G","promesa.core/resolved"]]],"~i59",["^ ","~i3",[["^ ","^1@",56,"^1A",19,"^G","v"]]],"~i60",["^ ","~i2",[["^ ","^1@",0,"^1A",20]],"~i3",[["^ ","^1@",7,"^1A",20,"^G","promesa.impl/resolved"]],"~i17",[["^ ","^1@",29,"^1A",20,"^G","v"]]],"~i62",["^ ","~i0",[["^ ","^1@",0,"^1A",22],["^ ","^1@",24,"^1A",25],["^ ","^1@",0,"^1A",26]],"~i6",[["^ ","^1@",0,"^1A",25,"^G","promesa.core/rejected"]]],"~i64",["^ ","~i3",[["^ ","^1@",56,"^1A",25,"^G","v"]]],"~i65",["^ ","~i2",[["^ ","^1@",0,"^1A",26]],"~i3",[["^ ","^1@",7,"^1A",26,"^G","promesa.impl/rejected"]],"^1L",[["^ ","^1@",29,"^1A",26,"^G","v"]]],"~i67",["^ ","~i0",[["^ ","^1@",0,"^1A",28],["^ ","^1@",23,"^1A",31],["^ ","^1@",0,"^1A",32]],"~i6",[["^ ","^1@",0,"^1A",31,"^G","promesa.core/promise"]]],"~i69",["^ ","~i3",[["^ ","^1@",54,"^1A",31,"^G","v"]]],"~i70",["^ ","~i2",[["^ ","^1@",0,"^1A",32]],"~i3",[["^ ","^1@",7,"^1A",32,"^G","promesa.protocols/-promise"]],"^1G",[["^ ","^1@",34,"^1A",32,"^G","v"]]],"~i72",["^ ","~i0",[["^ ","^1@",0,"^1A",34],["^ ","^1@",30,"^1A",37],["^ ","^1@",0,"^1A",38]],"~i6",[["^ ","^1@",0,"^1A",37,"^G","promesa.core/promise?"]]],"~i74",["^ ","~i3",[["^ ","^1@",68,"^1A",37,"^G","v"]]],"~i76",["^ ","~i11",[["^ ","^1@",0,"^1A",38]],"^1B",[["^ ","^1@",21,"^1A",38,"^G","promesa.core/Promise"]],"^1C",[["^ ","^1@",8,"^1A",38,"^G","v"]]],"~i80",["^ ","~i0",[["^ ","^1@",0,"^1A",40],["^ ","^1@",31,"^1A",43],["^ ","^1@",0,"^1A",44]],"~i6",[["^ ","^1@",0,"^1A",43,"^G","promesa.core/resolved?"]]],"~i82",["^ ","~i3",[["^ ","^1@",70,"^1A",43,"^G","p"]]],"~i83",["^ ","~i2",[["^ ","^1@",0,"^1A",44]],"~i3",[["^ ","^1@",7,"^1A",44,"^G","promesa.protocols/-resolved?"]],"^1L",[["^ ","^1@",42,"^1A",44,"^G","p"]]],"~i85",["^ ","~i0",[["^ ","^1@",0,"^1A",46],["^ ","^1@",31,"^1A",49],["^ ","^1@",0,"^1A",50]],"~i6",[["^ ","^1@",0,"^1A",49,"^G","promesa.core/rejected?"]]],"~i87",["^ ","~i3",[["^ ","^1@",70,"^1A",49,"^G","p"]]],"~i88",["^ ","~i2",[["^ ","^1@",0,"^1A",50]],"~i3",[["^ ","^1@",7,"^1A",50,"^G","promesa.protocols/-rejected?"]],"^1L",[["^ ","^1@",42,"^1A",50,"^G","p"]]],"~i90",["^ ","~i0",[["^ ","^1@",0,"^1A",52],["^ ","^1@",30,"^1A",55],["^ ","^1@",0,"^1A",56]],"~i6",[["^ ","^1@",0,"^1A",55,"^G","promesa.core/pending?"]]],"~i92",["^ ","~i3",[["^ ","^1@",68,"^1A",55,"^G","p"]]],"~i93",["^ ","~i2",[["^ ","^1@",0,"^1A",56]],"~i3",[["^ ","^1@",7,"^1A",56,"^G","promesa.protocols/-pending?"]],"~i16",[["^ ","^1@",41,"^1A",56,"^G","p"]]],"~i95",["^ ","~i0",[["^ ","^1@",0,"^1A",58],["^ ","^1@",23,"^1A",61],["^ ","^1@",0,"^1A",62]],"~i6",[["^ ","^1@",0,"^1A",61,"^G","promesa.core/extract"]]],"~i97",["^ ","~i3",[["^ ","^1@",54,"^1A",61,"^G","p"]]],"~i98",["^ ","~i2",[["^ ","^1@",0,"^1A",62]],"~i3",[["^ ","^1@",7,"^1A",62,"^G","promesa.protocols/-extract"]],"^1G",[["^ ","^1@",34,"^1A",62,"^G","p"]]],"~i100",["^ ","~i0",[["^ ","^1@",0,"^1A",64]],"~i5",[["^ ","^1@",0,"^1A",67,"^G","promesa.core/done?"]]],"~i102",["^ ","~i2",[["^ ","^1@",27,"^1A",67]],"~i3",[["^ ","^1@",27,"^1A",67,"^G","cljs.core/complement"]],"~i14",[["^ ","^1@",48,"^1A",67,"^G","promesa.core/pending?"]]],"~i106",["^ ","~i0",[["^ ","^1@",0,"^1A",68],["^ ","^1@",19,"^1A",72],["^ ","^1@",0,"^1A",73]],"~i6",[["^ ","^1@",0,"^1A",72,"^G","promesa.core/map"]]],"~i109",["^ ","~i3",[["^ ","^1@",46,"^1A",72,"^G","f"]],"~i5",[["^ ","^1@",48,"^1A",72,"^G","p"]]],"~i110",["^ ","~i2",[["^ ","^1@",0,"^1A",73]],"~i3",[["^ ","^1@",7,"^1A",73,"^G","promesa.protocols/-map"]],"^1V",[["^ ","^1@",30,"^1A",73,"^G","p"]],"~i13",[["^ ","^1@",32,"^1A",73,"^G","f"]]],"~i112",["^ ","~i0",[["^ ","^1@",0,"^1A",75],["^ ","^1@",22,"^1A",84],["^ ","^1@",0,"^1A",85]],"~i6",[["^ ","^1@",0,"^1A",84,"^G","promesa.core/mapcat"]]],"~i120",["^ ","~i3",[["^ ","^1@",52,"^1A",84,"^G","f"]],"~i5",[["^ ","^1@",54,"^1A",84,"^G","p"]]],"~i121",["^ ","~i2",[["^ ","^1@",0,"^1A",85]],"~i3",[["^ ","^1@",7,"^1A",85,"^G","promesa.protocols/-bind"]],"~i12",[["^ ","^1@",31,"^1A",85,"^G","p"]],"^2:",[["^ ","^1@",33,"^1A",85,"^G","f"]]],"~i123",["^ ","~i0",[["^ ","^1@",0,"^1A",87],["^ ","^1@",20,"^1A",90],["^ ","^1@",0,"^1A",91]],"~i6",[["^ ","^1@",0,"^1A",90,"^G","promesa.core/bind"]]],"~i125",["^ ","~i3",[["^ ","^1@",48,"^1A",90,"^G","p"]],"~i5",[["^ ","^1@",50,"^1A",90,"^G","f"]]],"~i126",["^ ","~i2",[["^ ","^1@",0,"^1A",91]],"~i3",[["^ ","^1@",7,"^1A",91,"^G","promesa.protocols/-bind"]],"^2B",[["^ ","^1@",31,"^1A",91,"^G","p"]],"^2:",[["^ ","^1@",33,"^1A",91,"^G","f"]]],"~i128",["^ ","~i0",[["^ ","^1@",0,"^1A",93],["^ ","^1@",20,"^1A",101],["^ ","^1@",0,"^1A",102]],"~i6",[["^ ","^1@",0,"^1A",101,"^G","promesa.core/then"]]],"~i135",["^ ","~i3",[["^ ","^1@",48,"^1A",101,"^G","p"]],"~i5",[["^ ","^1@",50,"^1A",101,"^G","f"]]],"~i136",["^ ","^1V",[["^ ","^1@",0,"^1A",102]],"^2B",[["^ ","^1@",7,"^1A",102,"^G","promesa.protocols/-map"]],"~i20",[["^ ","^1@",30,"^1A",102,"^G","p"]],"^1B",[["^ ","^1@",32,"^1A",102,"^G","f"]]],"~i143",["^ ","~i0",[["^ ","^1@",0,"^1A",104],["^ ","^1@",0,"^1A",104],["^ ","^1@",21,"^1A",107],["^ ","^1@",50,"^1A",107,"^G","var_args"],["^ ","^1@",0,"^1A",108],["^ ","^1@",0,"^1A",108],["^ ","^1@",4,"^1A",108,"^G","args__4534__auto__"],["^ ","^1@",25,"^1A",108],["^ ","^1@",0,"^1A",109],["^ ","^1@",0,"^1A",109],["^ ","^1@",4,"^1A",109,"^G","len__4531__auto__"],["^ ","^1@",29,"^1A",109],["^ ","^1@",29,"^1A",109],["^ ","^1@",0,"^1A",110],["^ ","^1@",0,"^1A",110],["^ ","^1@",4,"^1A",110,"^G","i__4532__auto__"],["^ ","^1@",27,"^1A",110],["^ ","^1@",0,"^1A",112],["^ ","^1@",0,"^1A",112],["^ ","^1@",3,"^1A",112],["^ ","^1@",4,"^1A",112,"^G","i__4532__auto__"],["^ ","^1@",27,"^1A",112,"^G","len__4531__auto__"],["^ ","^1@",0,"^1A",113],["^ ","^1@",0,"^1A",113],["^ ","^1@",0,"^1A",113,"^G","args__4534__auto__"],["^ ","^1@",24,"^1A",113],["^ ","^1@",25,"^1A",113],["^ ","^1@",35,"^1A",113,"^G","i__4532__auto__"],["^ ","^1@",0,"^1A",115],["^ ","^1@",14,"^1A",115],["^ ","^1@",15,"^1A",115,"^G","i__4532__auto__"],["^ ","^1@",38,"^1A",115],["^ ","^1@",0,"^1A",119],["^ ","^1@",0,"^1A",123],["^ ","^1@",4,"^1A",123,"^G","argseq__4535__auto__"],["^ ","^1@",27,"^1A",123],["^ ","^1@",29,"^1A",123],["^ ","^1@",30,"^1A",123],["^ ","^1@",36,"^1A",123],["^ ","^1@",36,"^1A",123,"^G","args__4534__auto__"],["^ ","^1@",64,"^1A",123],["^ ","^1@",64,"^1A",123],["^ ","^1@",69,"^1A",123,"^G","cljs.core/IndexedSeq"],["^ ","^1@",90,"^1A",123],["^ ","^1@",90,"^1A",123,"^G","args__4534__auto__"],["^ ","^1@",115,"^1A",123],["^ ","^1@",120,"^1A",123],["^ ","^1@",124,"^1A",123],["^ ","^1@",131,"^1A",123],["^ ","^1@",0,"^1A",124],["^ ","^1@",0,"^1A",124],["^ ","^1@",7,"^1A",124,"^G","promesa.core/chain"],["^ ","^1@",63,"^1A",124],["^ ","^1@",64,"^1A",124],["^ ","^1@",74,"^1A",124],["^ ","^1@",80,"^1A",124,"^G","argseq__4535__auto__"],["^ ","^1@",0,"^1A",127],["^ ","^1@",0,"^1A",127],["^ ","^1@",0,"^1A",127],["^ ","^1@",0,"^1A",127,"^G","promesa.core/chain"],["^ ","^1@",58,"^1A",127],["^ ","^1@",0,"^1A",128],["^ ","^1@",0,"^1A",133],["^ ","^1@",0,"^1A",133],["^ ","^1@",0,"^1A",133,"^G","promesa.core/chain"],["^ ","^1@",45,"^1A",133],["^ ","^1@",0,"^1A",135],["^ ","^1@",0,"^1A",136],["^ ","^1@",0,"^1A",136],["^ ","^1@",0,"^1A",136,"^G","promesa.core/chain"],["^ ","^1@",39,"^1A",136],["^ ","^1@",50,"^1A",136,"^G","seq4890"],["^ ","^1@",0,"^1A",137],["^ ","^1@",0,"^1A",137],["^ ","^1@",4,"^1A",137,"^G","G__4891"],["^ ","^1@",14,"^1A",137],["^ ","^1@",14,"^1A",137,"^G","cljs.core/first"],["^ ","^1@",30,"^1A",137,"^G","seq4890"],["^ ","^1@",4,"^1A",138,"^G","seq4890"],["^ ","^1@",18,"^1A",138],["^ ","^1@",18,"^1A",138,"^G","cljs.core/next"],["^ ","^1@",33,"^1A",138,"^G","seq4890"],["^ ","^1@",0,"^1A",139],["^ ","^1@",0,"^1A",139],["^ ","^1@",4,"^1A",139,"^G","self__4518__auto__"],["^ ","^1@",25,"^1A",139],["^ ","^1@",0,"^1A",140],["^ ","^1@",0,"^1A",140],["^ ","^1@",7,"^1A",140,"^G","self__4518__auto__"],["^ ","^1@",63,"^1A",140,"^G","G__4891"],["^ ","^1@",71,"^1A",140,"^G","seq4890"],["^ ","^1@",0,"^1A",143]],"~i6",[["^ ","^1@",0,"^1A",107,"^G","promesa.core/chain"]]],"~i145",["^ ","~i3",[["^ ","^1@",69,"^1A",127,"^G","p"]],"~i7",[["^ ","^1@",71,"^1A",127,"^G","funcs"]]],"~i146",["^ ","~i2",[["^ ","^1@",0,"^1A",128],["^ ","^1@",54,"^1A",128],["^ ","^1@",65,"^1A",128,"^G","p1__4887#"],["^ ","^1@",81,"^1A",128,"^G","p2__4888#"],["^ ","^1@",0,"^1A",129]],"~i3",[["^ ","^1@",7,"^1A",128,"^G","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^1V",[["^ ","^1@",0,"^1A",129],["^ ","^1@",25,"^1A",129,"^G","p1__4887#"],["^ ","^1@",41,"^1A",129,"^G","p2__4888#"]],"^2B",[["^ ","^1@",7,"^1A",129,"^G","promesa.core/then"]],"~i24",[["^ ","^1@",3,"^1A",130,"^G","p"]],"~i26",[["^ ","^1@",5,"^1A",130,"^G","funcs"]]],"~i148",["^ ","~i0",[["^ ","^1@",0,"^1A",143],["^ ","^1@",22,"^1A",143],["^ ","^1@",0,"^1A",144]],"~i6",[["^ ","^1@",0,"^1A",143,"^G","promesa.core/branch"]]],"~i149",["^ ","~i3",[["^ ","^1@",52,"^1A",143,"^G","p"]],"~i5",[["^ ","^1@",54,"^1A",143,"^G","success"]],"^2>",[["^ ","^1@",62,"^1A",143,"^G","failure"]]],"~i150",["^ ","~i6",[["^ ","^1@",55,"^1A",144,"^G","p"]]],"~i151",["^ ","~i6",[["^ ","^1@",32,"^1A",144]],"~i7",[["^ ","^1@",32,"^1A",144,"^G","promesa.protocols/-map"]],"^1G",[["^ ","^1@",57,"^1A",144,"^G","success"]]],"~i152",["^ ","~i6",[["^ ","^1@",0,"^1A",144]],"~i7",[["^ ","^1@",7,"^1A",144,"^G","promesa.protocols/-catch"]],"^1L",[["^ ","^1@",66,"^1A",144,"^G","failure"]]],"~i154",["^ ","~i0",[["^ ","^1@",0,"^1A",146],["^ ","^1@",0,"^1A",146],["^ ","^1@",22,"^1A",149],["^ ","^1@",51,"^1A",149,"^G","var_args"],["^ ","^1@",0,"^1A",150],["^ ","^1@",0,"^1A",150],["^ ","^1@",4,"^1A",150,"^G","G__4930"],["^ ","^1@",14,"^1A",150],["^ ","^1@",14,"^1A",150],["^ ","^1@",0,"^1A",151],["^ ","^1@",0,"^1A",151],["^ ","^1@",8,"^1A",151,"^G","G__4930"],["^ ","^1@",5,"^1A",152],["^ ","^1@",0,"^1A",153],["^ ","^1@",7,"^1A",153,"^G","promesa.core/catch"],["^ ","^1@",57,"^1A",153],["^ ","^1@",58,"^1A",153],["^ ","^1@",68,"^1A",153],["^ ","^1@",74,"^1A",153],["^ ","^1@",75,"^1A",153],["^ ","^1@",85,"^1A",153],["^ ","^1@",5,"^1A",156],["^ ","^1@",0,"^1A",157],["^ ","^1@",7,"^1A",157,"^G","promesa.core/catch"],["^ ","^1@",57,"^1A",157],["^ ","^1@",58,"^1A",157],["^ ","^1@",68,"^1A",157],["^ ","^1@",74,"^1A",157],["^ ","^1@",75,"^1A",157],["^ ","^1@",85,"^1A",157],["^ ","^1@",91,"^1A",157],["^ ","^1@",92,"^1A",157],["^ ","^1@",102,"^1A",157],["^ ","^1@",0,"^1A",161],["^ ","^1@",6,"^1A",161],["^ ","^1@",11,"^1A",161,"^G","js/Error"],["^ ","^1@",17,"^1A",161],["^ ","^1@",18,"^1A",161],["^ ","^1@",80,"^1A",161],["^ ","^1@",80,"^1A",161],["^ ","^1@",0,"^1A",166],["^ ","^1@",0,"^1A",166],["^ ","^1@",52,"^1A",166],["^ ","^1@",0,"^1A",167],["^ ","^1@",0,"^1A",170],["^ ","^1@",0,"^1A",170],["^ ","^1@",52,"^1A",170],["^ ","^1@",0,"^1A",171],["^ ","^1@",0,"^1A",185],["^ ","^1@",0,"^1A",185],["^ ","^1@",46,"^1A",185],["^ ","^1@",0,"^1A",187]],"~i6",[["^ ","^1@",0,"^1A",149,"^G","promesa.core/catch"],["^ ","^1@",0,"^1A",166,"^G","promesa.core/catch"],["^ ","^1@",0,"^1A",170,"^G","promesa.core/catch"],["^ ","^1@",0,"^1A",185,"^G","promesa.core/catch"]]],"~i156",["^ ","~i4",[["^ ","^1@",63,"^1A",166,"^G","p"]],"~i6",[["^ ","^1@",65,"^1A",166,"^G","f"]]],"~i157",["^ ","~i3",[["^ ","^1@",0,"^1A",167]],"~i4",[["^ ","^1@",7,"^1A",167,"^G","promesa.protocols/-catch"]],"^2:",[["^ ","^1@",32,"^1A",167,"^G","p"]],"^24",[["^ ","^1@",34,"^1A",167,"^G","f"]]],"~i158",["^ ","~i4",[["^ ","^1@",63,"^1A",170,"^G","p"]],"~i6",[["^ ","^1@",65,"^1A",170,"^G","pred-or-type"]],"~i19",[["^ ","^1@",78,"^1A",170,"^G","f"]]],"~i159",["^ ","~i3",[["^ ","^1@",0,"^1A",171],["^ ","^1@",0,"^1A",174]],"~i9",[["^ ","^1@",4,"^1A",171,"^G","accept?"]],"^1L",[["^ ","^1@",20,"^1A",171],["^ ","^1@",71,"^1A",171],["^ ","^1@",82,"^1A",171,"^G","p1__4928#"],["^ ","^1@",0,"^1A",172]],"~i21",[["^ ","^1@",22,"^1A",171]],"^1B",[["^ ","^1@",22,"^1A",171,"^G","cljs.core/ifn?"]],"~i27",[["^ ","^1@",43,"^1A",171,"^G","pred-or-type"]]],"~i160",["^ ","^2X",[["^ ","^1@",58,"^1A",171,"^G","pred-or-type"]]],"~i161",["^ ","^2I",[["^ ","^1@",0,"^1A",172],["^ ","^1@",8,"^1A",172,"^G","p1__4928#"]],"~i31",[["^ ","^1@",35,"^1A",172,"^G","pred-or-type"]]],"~i162",["^ ","~i5",[["^ ","^1@",0,"^1A",174]],"~i6",[["^ ","^1@",7,"^1A",174,"^G","promesa.protocols/-catch"]],"^24",[["^ ","^1@",32,"^1A",174,"^G","p"]],"^1H",[["^ ","^1@",34,"^1A",174],["^ ","^1@",0,"^1A",176]],"~i23",[["^ ","^1@",18,"^1A",175,"^G","e"]]],"~i163",["^ ","^2I",[["^ ","^1@",0,"^1A",176]],"^2M",[["^ ","^1@",20,"^1A",176]],"~i25",[["^ ","^1@",21,"^1A",176,"^G","accept?"],["^ ","^1@",67,"^1A",176,"^G","accept?"],["^ ","^1@",116,"^1A",176,"^G","accept?"]],"~i33",[["^ ","^1@",111,"^1A",176,"^G","e"],["^ ","^1@",140,"^1A",176,"^G","e"]]],"~i164",["^ ","^1B",[["^ ","^1@",0,"^1A",177]],"^34",[["^ ","^1@",8,"^1A",177,"^G","f"],["^ ","^1@",42,"^1A",177,"^G","f"],["^ ","^1@",79,"^1A",177,"^G","f"]],"^36",[["^ ","^1@",74,"^1A",177,"^G","e"],["^ ","^1@",91,"^1A",177,"^G","e"]]],"~i165",["^ ","^1B",[["^ ","^1@",0,"^1A",179]],"^34",[["^ ","^1@",7,"^1A",179,"^G","promesa.impl/rejected"]],"~i37",[["^ ","^1@",29,"^1A",179,"^G","e"]]],"~i167",["^ ","~i0",[["^ ","^1@",0,"^1A",187],["^ ","^1@",0,"^1A",187],["^ ","^1@",21,"^1A",190],["^ ","^1@",50,"^1A",190,"^G","var_args"],["^ ","^1@",0,"^1A",191],["^ ","^1@",0,"^1A",191],["^ ","^1@",4,"^1A",191,"^G","G__4942"],["^ ","^1@",14,"^1A",191],["^ ","^1@",14,"^1A",191],["^ ","^1@",0,"^1A",192],["^ ","^1@",0,"^1A",192],["^ ","^1@",8,"^1A",192,"^G","G__4942"],["^ ","^1@",5,"^1A",193],["^ ","^1@",0,"^1A",194],["^ ","^1@",7,"^1A",194,"^G","promesa.core/error"],["^ ","^1@",56,"^1A",194],["^ ","^1@",57,"^1A",194],["^ ","^1@",67,"^1A",194],["^ ","^1@",73,"^1A",194],["^ ","^1@",74,"^1A",194],["^ ","^1@",84,"^1A",194],["^ ","^1@",5,"^1A",197],["^ ","^1@",0,"^1A",198],["^ ","^1@",7,"^1A",198,"^G","promesa.core/error"],["^ ","^1@",56,"^1A",198],["^ ","^1@",57,"^1A",198],["^ ","^1@",67,"^1A",198],["^ ","^1@",73,"^1A",198],["^ ","^1@",74,"^1A",198],["^ ","^1@",84,"^1A",198],["^ ","^1@",90,"^1A",198],["^ ","^1@",91,"^1A",198],["^ ","^1@",101,"^1A",198],["^ ","^1@",0,"^1A",202],["^ ","^1@",6,"^1A",202],["^ ","^1@",11,"^1A",202,"^G","js/Error"],["^ ","^1@",17,"^1A",202],["^ ","^1@",18,"^1A",202],["^ ","^1@",80,"^1A",202],["^ ","^1@",80,"^1A",202],["^ ","^1@",0,"^1A",207],["^ ","^1@",0,"^1A",207],["^ ","^1@",51,"^1A",207],["^ ","^1@",0,"^1A",208],["^ ","^1@",0,"^1A",211],["^ ","^1@",0,"^1A",211],["^ ","^1@",51,"^1A",211],["^ ","^1@",0,"^1A",212],["^ ","^1@",0,"^1A",215],["^ ","^1@",0,"^1A",215],["^ ","^1@",45,"^1A",215],["^ ","^1@",0,"^1A",217]],"~i6",[["^ ","^1@",0,"^1A",190,"^G","promesa.core/error"],["^ ","^1@",0,"^1A",207,"^G","promesa.core/error"],["^ ","^1@",0,"^1A",211,"^G","promesa.core/error"],["^ ","^1@",0,"^1A",215,"^G","promesa.core/error"]]],"~i169",["^ ","~i4",[["^ ","^1@",62,"^1A",207,"^G","f"]],"~i6",[["^ ","^1@",64,"^1A",207,"^G","p"]],"~i9",[["^ ","^1@",0,"^1A",208]],"~i10",[["^ ","^1@",7,"^1A",208,"^G","promesa.core.catch$.cljs$core$IFn$_invoke$arity$2"]],"^24",[["^ ","^1@",57,"^1A",208,"^G","p"]],"^1H",[["^ ","^1@",59,"^1A",208,"^G","f"]]],"~i170",["^ ","~i4",[["^ ","^1@",62,"^1A",211,"^G","f"]],"~i6",[["^ ","^1@",64,"^1A",211,"^G","type"]],"^1V",[["^ ","^1@",69,"^1A",211,"^G","p"]],"^2:",[["^ ","^1@",0,"^1A",212]],"^1G",[["^ ","^1@",7,"^1A",212,"^G","promesa.core.catch$.cljs$core$IFn$_invoke$arity$3"]],"^2Z",[["^ ","^1@",57,"^1A",212,"^G","p"]],"^34",[["^ ","^1@",59,"^1A",212,"^G","type"]],"~i28",[["^ ","^1@",64,"^1A",212,"^G","f"]]],"~i172",["^ ","~i0",[["^ ","^1@",0,"^1A",217]],"~i5",[["^ ","^1@",0,"^1A",220,"^G","promesa.core/err"]]],"~i174",["^ ","~i2",[["^ ","^1@",19,"^1A",220,"^G","promesa.core/error"]]],"~i176",["^ ","~i0",[["^ ","^1@",0,"^1A",221],["^ ","^1@",24,"^1A",226],["^ ","^1@",0,"^1A",227]],"~i6",[["^ ","^1@",0,"^1A",226,"^G","promesa.core/finally"]]],"~i180",["^ ","~i3",[["^ ","^1@",55,"^1A",226,"^G","p"]],"~i5",[["^ ","^1@",57,"^1A",226,"^G","callback"]]],"~i184",["^ ","^1V",[["^ ","^1@",0,"^1A",227]],"^2I",[["^ ","^1@",7,"^1A",227,"^G","p"]],"^1B",[["^ ","^1@",16,"^1A",227,"^G","callback"]]],"~i186",["^ ","~i0",[["^ ","^1@",0,"^1A",229],["^ ","^1@",19,"^1A",247],["^ ","^1@",0,"^1A",248]],"~i6",[["^ ","^1@",0,"^1A",247,"^G","promesa.core/all"]]],"~i203",["^ ","~i3",[["^ ","^1@",46,"^1A",247,"^G","promises"]]],"~i204",["^ ","^1G",[["^ ","^1@",25,"^1A",248]],"^2Z",[["^ ","^1@",25,"^1A",248,"^G","promesa.core/Promise"]],"~i29",[["^ ","^1@",50,"^1A",248]],"^1C",[["^ ","^1@",50,"^1A",248,"^G","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1"]],"~i41",[["^ ","^1@",101,"^1A",248,"^G","promises"]]],"~i205",["^ ","^1G",[["^ ","^1@",0,"^1A",248]],"^24",[["^ ","^1@",7,"^1A",248,"^G","promesa.core/then"]],"^2Z",[["^ ","^1@",112,"^1A",248,"^G","cljs.core/vec"]]],"~i212",["^ ","~i0",[["^ ","^1@",0,"^1A",250],["^ ","^1@",19,"^1A",255],["^ ","^1@",0,"^1A",256]],"~i6",[["^ ","^1@",0,"^1A",255,"^G","promesa.core/any"]]],"~i216",["^ ","~i3",[["^ ","^1@",46,"^1A",255,"^G","promises"]]],"~i217",["^ ","^1V",[["^ ","^1@",0,"^1A",256]],"^1L",[["^ ","^1@",7,"^1A",256,"^G","promesa.core/Promise"]],"^36",[["^ ","^1@",32,"^1A",256]],"^2N",[["^ ","^1@",32,"^1A",256,"^G","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1"]],"^3:",[["^ ","^1@",83,"^1A",256,"^G","promises"]]],"~i224",["^ ","~i0",[["^ ","^1@",0,"^1A",258],["^ ","^1@",28,"^1A",261],["^ ","^1@",0,"^1A",262]],"~i6",[["^ ","^1@",0,"^1A",261,"^G","promesa.core/cancel!"]]],"~i226",["^ ","~i3",[["^ ","^1@",64,"^1A",261,"^G","p"]]],"~i227",["^ ","~i2",[["^ ","^1@",0,"^1A",262]],"~i3",[["^ ","^1@",0,"^1A",262,"^G","promesa.protocols/-cancel"]],"^2:",[["^ ","^1@",26,"^1A",262,"^G","p"]]],"~i228",["^ ","~i2",[["^ ","^1@",0,"^1A",264,"^G","p"]]],"~i230",["^ ","~i0",[["^ ","^1@",0,"^1A",266],["^ ","^1@",32,"^1A",269],["^ ","^1@",0,"^1A",270]],"~i6",[["^ ","^1@",0,"^1A",269,"^G","promesa.core/cancelled?"]]],"~i232",["^ ","~i3",[["^ ","^1@",72,"^1A",269,"^G","v"]]],"~i233",["^ ","~i2",[["^ ","^1@",0,"^1A",270]],"~i3",[["^ ","^1@",7,"^1A",270,"^G","promesa.protocols/-cancelled?"]],"^1H",[["^ ","^1@",43,"^1A",270,"^G","v"]]],"~i237",["^ ","~i0",[["^ ","^1@",0,"^1A",272],["^ ","^1@",25,"^1A",277],["^ ","^1@",0,"^1A",278]],"~i6",[["^ ","^1@",0,"^1A",277,"^G","promesa.core/promisify"]]],"~i241",["^ ","~i3",[["^ ","^1@",58,"^1A",277,"^G","callable"]]],"~i242",["^ ","~i2",[["^ ","^1@",0,"^1A",278],["^ ","^1@",0,"^1A",280]],"~i9",[["^ ","^1@",34,"^1A",279,"^G","args"],["^ ","^1@",4,"^1A",293,"^G","args"],["^ ","^1@",2,"^1A",297,"^G","args"],["^ ","^1@",35,"^1A",299,"^G","args"],["^ ","^1@",4,"^1A",302,"^G","args"],["^ ","^1@",25,"^1A",303,"^G","args"]]],"~i243",["^ ","~i4",[["^ ","^1@",0,"^1A",280]],"~i5",[["^ ","^1@",7,"^1A",280,"^G","promesa.core/promise"]],"^2>",[["^ ","^1@",28,"^1A",280],["^ ","^1@",0,"^1A",281]],"^1H",[["^ ","^1@",39,"^1A",280,"^G","resolve"]],"^2N",[["^ ","^1@",47,"^1A",280,"^G","reject"]]],"~i244",["^ ","^1G",[["^ ","^1@",0,"^1A",281],["^ ","^1@",0,"^1A",282]],"^2Z",[["^ ","^1@",4,"^1A",281,"^G","args"]],"^1C",[["^ ","^1@",60,"^1A",281]],"^32",[["^ ","^1@",60,"^1A",281,"^G","cljs.core/vec"]],"~i35",[["^ ","^1@",74,"^1A",281,"^G","args"]]],"~i245",["^ ","^1C",[["^ ","^1@",15,"^1A",281]],"^32",[["^ ","^1@",15,"^1A",281,"^G","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"~i36",[["^ ","^1@",80,"^1A",281,"^G","resolve"]]],"~i246",["^ ","^1L",[["^ ","^1@",0,"^1A",282],["^ ","^1@",4,"^1A",282],["^ ","^1@",15,"^1A",283],["^ ","^1@",18,"^1A",283],["^ ","^1@",19,"^1A",283,"^G","e4967"],["^ ","^1@",0,"^1A",284],["^ ","^1@",8,"^1A",284,"^G","e4967"],["^ ","^1@",0,"^1A",285],["^ ","^1@",0,"^1A",287],["^ ","^1@",0,"^1A",287],["^ ","^1@",6,"^1A",287,"^G","e4967"]]],"~i247",["^ ","^2X",[["^ ","^1@",4,"^1A",282]],"^2I",[["^ ","^1@",11,"^1A",282,"^G","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"^2N",[["^ ","^1@",57,"^1A",282,"^G","callable"]],"^3Z",[["^ ","^1@",66,"^1A",282,"^G","args"]]],"~i248",["^ ","~i50",[["^ ","^1@",36,"^1A",283,"^G","js/Error"]],"^1K",[["^ ","^1@",4,"^1A",284,"^G","e"]]],"~i249",["^ ","^34",[["^ ","^1@",0,"^1A",285]],"^2M",[["^ ","^1@",8,"^1A",285,"^G","reject"],["^ ","^1@",47,"^1A",285,"^G","reject"],["^ ","^1@",89,"^1A",285,"^G","reject"]],"^32",[["^ ","^1@",84,"^1A",285,"^G","e"],["^ ","^1@",106,"^1A",285,"^G","e"]]],"~i252",["^ ","~i3",[["^ ","^1@",0,"^1A",310],["^ ","^1@",0,"^1A",310],["^ ","^1@",23,"^1A",317],["^ ","^1@",54,"^1A",317,"^G","var_args"],["^ ","^1@",0,"^1A",318],["^ ","^1@",0,"^1A",318],["^ ","^1@",4,"^1A",318,"^G","G__4976"],["^ ","^1@",14,"^1A",318],["^ ","^1@",14,"^1A",318],["^ ","^1@",0,"^1A",319],["^ ","^1@",0,"^1A",319],["^ ","^1@",8,"^1A",319,"^G","G__4976"],["^ ","^1@",5,"^1A",320],["^ ","^1@",0,"^1A",321],["^ ","^1@",7,"^1A",321,"^G","promesa.core/timeout"],["^ ","^1@",58,"^1A",321],["^ ","^1@",59,"^1A",321],["^ ","^1@",69,"^1A",321],["^ ","^1@",75,"^1A",321],["^ ","^1@",76,"^1A",321],["^ ","^1@",86,"^1A",321],["^ ","^1@",5,"^1A",324],["^ ","^1@",0,"^1A",325],["^ ","^1@",7,"^1A",325,"^G","promesa.core/timeout"],["^ ","^1@",58,"^1A",325],["^ ","^1@",59,"^1A",325],["^ ","^1@",69,"^1A",325],["^ ","^1@",75,"^1A",325],["^ ","^1@",76,"^1A",325],["^ ","^1@",86,"^1A",325],["^ ","^1@",92,"^1A",325],["^ ","^1@",93,"^1A",325],["^ ","^1@",103,"^1A",325],["^ ","^1@",0,"^1A",329],["^ ","^1@",6,"^1A",329],["^ ","^1@",11,"^1A",329,"^G","js/Error"],["^ ","^1@",17,"^1A",329],["^ ","^1@",18,"^1A",329],["^ ","^1@",80,"^1A",329],["^ ","^1@",80,"^1A",329],["^ ","^1@",0,"^1A",334],["^ ","^1@",0,"^1A",334],["^ ","^1@",53,"^1A",334],["^ ","^1@",0,"^1A",335],["^ ","^1@",0,"^1A",338],["^ ","^1@",0,"^1A",338],["^ ","^1@",53,"^1A",338],["^ ","^1@",0,"^1A",339],["^ ","^1@",0,"^1A",342],["^ ","^1@",0,"^1A",342],["^ ","^1@",47,"^1A",342],["^ ","^1@",0,"^1A",344]],"~i9",[["^ ","^1@",0,"^1A",317,"^G","promesa.core/timeout"],["^ ","^1@",0,"^1A",334,"^G","promesa.core/timeout"],["^ ","^1@",0,"^1A",338,"^G","promesa.core/timeout"],["^ ","^1@",0,"^1A",342,"^G","promesa.core/timeout"]]],"~i258",["^ ","~i7",[["^ ","^1@",64,"^1A",334,"^G","p"]],"~i9",[["^ ","^1@",66,"^1A",334,"^G","t"]],"^2B",[["^ ","^1@",0,"^1A",335]],"^1B",[["^ ","^1@",7,"^1A",335,"^G","p"]],"^2M",[["^ ","^1@",17,"^1A",335,"^G","t"]]],"~i259",["^ ","~i7",[["^ ","^1@",64,"^1A",338,"^G","p"]],"~i9",[["^ ","^1@",66,"^1A",338,"^G","t"]],"^1V",[["^ ","^1@",68,"^1A",338,"^G","v"]],"^2:",[["^ ","^1@",0,"^1A",339]],"^2M",[["^ ","^1@",7,"^1A",339,"^G","p"]],"^2N",[["^ ","^1@",17,"^1A",339,"^G","t"]],"^3?",[["^ ","^1@",19,"^1A",339,"^G","v"]]],"~i261",["^ ","~i0",[["^ ","^1@",0,"^1A",344],["^ ","^1@",0,"^1A",344],["^ ","^1@",21,"^1A",350],["^ ","^1@",50,"^1A",350,"^G","var_args"],["^ ","^1@",0,"^1A",351],["^ ","^1@",0,"^1A",351],["^ ","^1@",4,"^1A",351,"^G","G__4983"],["^ ","^1@",14,"^1A",351],["^ ","^1@",14,"^1A",351],["^ ","^1@",0,"^1A",352],["^ ","^1@",0,"^1A",352],["^ ","^1@",8,"^1A",352,"^G","G__4983"],["^ ","^1@",5,"^1A",353],["^ ","^1@",0,"^1A",354],["^ ","^1@",7,"^1A",354,"^G","promesa.core/delay"],["^ ","^1@",56,"^1A",354],["^ ","^1@",57,"^1A",354],["^ ","^1@",67,"^1A",354],["^ ","^1@",5,"^1A",357],["^ ","^1@",0,"^1A",358],["^ ","^1@",7,"^1A",358,"^G","promesa.core/delay"],["^ ","^1@",56,"^1A",358],["^ ","^1@",57,"^1A",358],["^ ","^1@",67,"^1A",358],["^ ","^1@",73,"^1A",358],["^ ","^1@",74,"^1A",358],["^ ","^1@",84,"^1A",358],["^ ","^1@",0,"^1A",362],["^ ","^1@",6,"^1A",362],["^ ","^1@",11,"^1A",362,"^G","js/Error"],["^ ","^1@",17,"^1A",362],["^ ","^1@",18,"^1A",362],["^ ","^1@",80,"^1A",362],["^ ","^1@",80,"^1A",362],["^ ","^1@",0,"^1A",367],["^ ","^1@",0,"^1A",367],["^ ","^1@",51,"^1A",367],["^ ","^1@",0,"^1A",368],["^ ","^1@",0,"^1A",371],["^ ","^1@",0,"^1A",371],["^ ","^1@",51,"^1A",371],["^ ","^1@",0,"^1A",372],["^ ","^1@",0,"^1A",379],["^ ","^1@",0,"^1A",379],["^ ","^1@",45,"^1A",379],["^ ","^1@",0,"^1A",381]],"~i6",[["^ ","^1@",0,"^1A",350,"^G","promesa.core/delay"],["^ ","^1@",0,"^1A",367,"^G","promesa.core/delay"],["^ ","^1@",0,"^1A",371,"^G","promesa.core/delay"],["^ ","^1@",0,"^1A",379,"^G","promesa.core/delay"]]],"~i266",["^ ","~i4",[["^ ","^1@",62,"^1A",367,"^G","t"]],"~i7",[["^ ","^1@",0,"^1A",368],["^ ","^1@",58,"^1A",368]],"~i8",[["^ ","^1@",7,"^1A",368,"^G","promesa.core.delay.cljs$core$IFn$_invoke$arity$2"]],"^2:",[["^ ","^1@",56,"^1A",368,"^G","t"]]],"~i267",["^ ","~i4",[["^ ","^1@",62,"^1A",371,"^G","t"]],"~i6",[["^ ","^1@",64,"^1A",371,"^G","v"]]],"~i268",["^ ","^2B",[["^ ","^1@",0,"^1A",372]],"^2>",[["^ ","^1@",7,"^1A",372,"^G","promesa.core/promise"]],"^2Z",[["^ ","^1@",28,"^1A",372],["^ ","^1@",0,"^1A",373]],"^2N",[["^ ","^1@",39,"^1A",372,"^G","resolve"]],"~i34",[["^ ","^1@",47,"^1A",372,"^G","reject"]]],"~i269",["^ ","^34",[["^ ","^1@",0,"^1A",373],["^ ","^1@",31,"^1A",373],["^ ","^1@",0,"^1A",374]],"^2M",[["^ ","^1@",7,"^1A",373,"^G","promesa.core/schedule"]],"^37",[["^ ","^1@",29,"^1A",373,"^G","t"]],"^40",[["^ ","^1@",0,"^1A",374]],"^3:",[["^ ","^1@",8,"^1A",374,"^G","resolve"],["^ ","^1@",48,"^1A",374,"^G","resolve"],["^ ","^1@",91,"^1A",374,"^G","resolve"]],"~i45",[["^ ","^1@",86,"^1A",374,"^G","v"],["^ ","^1@",109,"^1A",374,"^G","v"]]],"~i275",["^ ","~i0",[["^ ","^1@",0,"^1A",381],["^ ","^1@",23,"^1A",386],["^ ","^1@",0,"^1A",387]],"~i6",[["^ ","^1@",0,"^1A",386,"^G","promesa.core/attempt"]]],"~i279",["^ ","~i3",[["^ ","^1@",54,"^1A",386,"^G","callback"]]],"~i280",["^ ","^1V",[["^ ","^1@",0,"^1A",387]],"^2B",[["^ ","^1@",7,"^1A",387,"^G","promesa.core/promise"]],"^2I",[["^ ","^1@",28,"^1A",387],["^ ","^1@",0,"^1A",388]],"^36",[["^ ","^1@",39,"^1A",387,"^G","resolve"]],"^4=",[["^ ","^1@",0,"^1A",388],["^ ","^1@",4,"^1A",388,"^G","G__4985"],["^ ","^1@",0,"^1A",389],["^ ","^1@",0,"^1A",389],["^ ","^1@",86,"^1A",389,"^G","G__4985"],["^ ","^1@",115,"^1A",389,"^G","G__4985"]],"^3Z",[["^ ","^1@",8,"^1A",389,"^G","resolve"],["^ ","^1@",48,"^1A",389,"^G","resolve"],["^ ","^1@",97,"^1A",389,"^G","resolve"]],"~i43",[["^ ","^1@",14,"^1A",388]],"~i44",[["^ ","^1@",15,"^1A",388,"^G","callback"],["^ ","^1@",56,"^1A",388,"^G","callback"],["^ ","^1@",99,"^1A",388,"^G","callback"]]],"~i293",["^ ","~i0",[["^ ","^1@",0,"^1A",392],["^ ","^1@",0,"^1A",392],["^ ","^1@",22,"^1A",392],["^ ","^1@",51,"^1A",392,"^G","var_args"],["^ ","^1@",0,"^1A",393],["^ ","^1@",0,"^1A",393],["^ ","^1@",4,"^1A",393,"^G","args__4534__auto__"],["^ ","^1@",25,"^1A",393],["^ ","^1@",0,"^1A",394],["^ ","^1@",0,"^1A",394],["^ ","^1@",4,"^1A",394,"^G","len__4531__auto__"],["^ ","^1@",29,"^1A",394],["^ ","^1@",29,"^1A",394],["^ ","^1@",0,"^1A",395],["^ ","^1@",0,"^1A",395],["^ ","^1@",4,"^1A",395,"^G","i__4532__auto__"],["^ ","^1@",27,"^1A",395],["^ ","^1@",0,"^1A",397],["^ ","^1@",0,"^1A",397],["^ ","^1@",3,"^1A",397],["^ ","^1@",4,"^1A",397,"^G","i__4532__auto__"],["^ ","^1@",27,"^1A",397,"^G","len__4531__auto__"],["^ ","^1@",0,"^1A",398],["^ ","^1@",0,"^1A",398],["^ ","^1@",0,"^1A",398,"^G","args__4534__auto__"],["^ ","^1@",24,"^1A",398],["^ ","^1@",25,"^1A",398],["^ ","^1@",35,"^1A",398,"^G","i__4532__auto__"],["^ ","^1@",0,"^1A",400],["^ ","^1@",14,"^1A",400],["^ ","^1@",15,"^1A",400,"^G","i__4532__auto__"],["^ ","^1@",38,"^1A",400],["^ ","^1@",0,"^1A",404],["^ ","^1@",0,"^1A",408],["^ ","^1@",4,"^1A",408,"^G","argseq__4535__auto__"],["^ ","^1@",27,"^1A",408],["^ ","^1@",29,"^1A",408],["^ ","^1@",30,"^1A",408],["^ ","^1@",36,"^1A",408],["^ ","^1@",36,"^1A",408,"^G","args__4534__auto__"],["^ ","^1@",64,"^1A",408],["^ ","^1@",64,"^1A",408],["^ ","^1@",69,"^1A",408,"^G","cljs.core/IndexedSeq"],["^ ","^1@",90,"^1A",408],["^ ","^1@",90,"^1A",408,"^G","args__4534__auto__"],["^ ","^1@",115,"^1A",408],["^ ","^1@",120,"^1A",408],["^ ","^1@",124,"^1A",408],["^ ","^1@",131,"^1A",408],["^ ","^1@",0,"^1A",409],["^ ","^1@",0,"^1A",409],["^ ","^1@",7,"^1A",409,"^G","promesa.core/await"],["^ ","^1@",64,"^1A",409,"^G","argseq__4535__auto__"],["^ ","^1@",0,"^1A",412],["^ ","^1@",0,"^1A",412],["^ ","^1@",0,"^1A",412],["^ ","^1@",0,"^1A",412,"^G","promesa.core/await"],["^ ","^1@",59,"^1A",412],["^ ","^1@",0,"^1A",413],["^ ","^1@",0,"^1A",416],["^ ","^1@",0,"^1A",416],["^ ","^1@",0,"^1A",416,"^G","promesa.core/await"],["^ ","^1@",46,"^1A",416],["^ ","^1@",0,"^1A",418],["^ ","^1@",0,"^1A",419],["^ ","^1@",0,"^1A",419],["^ ","^1@",0,"^1A",419,"^G","promesa.core/await"],["^ ","^1@",40,"^1A",419],["^ ","^1@",51,"^1A",419,"^G","seq4988"],["^ ","^1@",0,"^1A",420],["^ ","^1@",0,"^1A",420],["^ ","^1@",4,"^1A",420,"^G","self__4519__auto__"],["^ ","^1@",25,"^1A",420],["^ ","^1@",0,"^1A",421],["^ ","^1@",0,"^1A",421],["^ ","^1@",7,"^1A",421,"^G","self__4519__auto__"],["^ ","^1@",63,"^1A",421],["^ ","^1@",63,"^1A",421,"^G","cljs.core/seq"],["^ ","^1@",77,"^1A",421,"^G","seq4988"],["^ ","^1@",0,"^1A",424]],"~i6",[["^ ","^1@",0,"^1A",392,"^G","promesa.core/await"]]],"~i294",["^ ","~i5",[["^ ","^1@",70,"^1A",412,"^G","args"]]],"~i295",["^ ","~i2",[["^ ","^1@",0,"^1A",413]],"~i9",[["^ ","^1@",6,"^1A",413],["^ ","^1@",54,"^1A",413],["^ ","^1@",91,"^1A",413]],"^3=",[["^ ","^1@",6,"^1A",413,"^G","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^S"],[1534380137000],["^17","goog/math/math.js"],[1530991559994,"^T","~$goog.array","~$goog.asserts"],["^17","goog/array/array.js"],[1530991559994,"^T","^4M"],["^17","goog/debug/error.js"],[1530991559994,"^T"],["^17","promesa/impl/scheduler.cljc"],[1535586406328,"^T","^S","^M"],["^17","promesa/impl.cljc"],[1535586406328,"^T","^S","^M","~$org.bluebird"],["^17","goog/dom/nodetype.js"],[1530991559994,"^T"],["^17","goog/object/object.js"],[1530991559994,"^T"],"~:SHADOW-TIMESTAMP",[1535746856000,1534380137000],["^17","goog/math/long.js"],[1530991559994,"^T","^4M","~$goog.reflect"],["^17","goog/functions/functions.js"],[1530991559994,"^T"],["^17","goog/structs/map.js"],[1530991559994,"^T","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["~:shadow.build.js-support/require","bluebird"],["~$shadow.js.shim.module$bluebird","shadow.js.shim.module$bluebird.js","^T"],["^17","goog/asserts/asserts.js"],[1530991559994,"^T","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^17","goog/uri/uri.js"],[1530991559994,"^T","^4L","^4M","^4X","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^17","goog/base.js"],[1530991559994],["^17","promesa/core.cljc"],[1535586406328,"^T","^S","^M","^O","^Q"],["^17","goog/structs/structs.js"],[1530991559994,"^T","^4L","^4S"],["^17","org/bluebird.cljs"],[1535669979047,"^T","^S","^4U"],["^17","goog/string/string.js"],[1530991559994,"^T"],["^17","goog/reflect/reflect.js"],[1530991559994,"^T"],["^17","goog/string/stringbuffer.js"],[1530991559994,"^T"],["^17","promesa/protocols.cljc"],[1535586406328,"^T","^S"],["^17","goog/iter/iter.js"],[1530991559994,"^T","^4L","^4M","~$goog.functions","~$goog.math"],["^17","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^4X","^4S","^4L","~$goog.Uri","~$goog.string.StringBuffer"],["^17","goog/math/integer.js"],[1530991559994,"^T"],["^17","goog/uri/utils.js"],[1530991559994,"^T","^4L","^4M","^4X"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","promesa/core.cljc","^7",25,"^8",5,"^9",25,"^:",17],"^;",["^ ","^<","^="],"^>",null,"^?",["^@",["^A","^B","^C","^D","^E","^F"]],"~:shadow/js-access-properties",["^@",["any"]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^M","^O","^O","^P","^O","^Q","^Q","^R","^Q","^S","^S","^T","^T"],"^U",["^@",["^V"]],"~:shadow/js-access-global",["^@",["Error"]],"^W",null,"~:defs",["^ ","~$timeout",["^ ","~:protocol-inline",null,"^5",["^ ","^6","promesa/core.cljc","^7",253,"^8",10,"^9",253,"^:",17,"~:arglists",["^Z",["~$quote",["^Z",[["~$p","~$t"],["~$p","~$t","~$v"]]]]],"~:doc","Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError","~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",3,"~:method-params",["^Z",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5>",["^Z",[["~$p","~$t"],["~$p","~$t","~$v"]]],"~:arglists-meta",["^Z",[null,null]]]],"^G","~$promesa.core/timeout","^5B",false,"^6","promesa/core.cljc","^:",17,"^5A",["^ ","^5B",false,"^5C",3,"^5D",["^Z",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5>",["^Z",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5E",["^Z",[null,null]]],"^5D",["^Z",[["~$p","~$t"],["~$p","~$t","~$v"]]],"~:protocol-impl",null,"^5E",["^Z",[null,null]],"^8",4,"^7",253,"^9",253,"^5C",3,"~:fn-var",true,"^5>",["^Z",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5@","Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError"],"~$Promise",["^ ","^G","~$promesa.core/Promise","^6","promesa/core.cljc","^7",43,"^8",10,"^9",43,"^:",30,"~:const",true,"^5",["^ ","^6","promesa/core.cljc","^7",43,"^8",23,"^9",43,"^:",30,"^5K",true],"~:tag","~$js"],"~$branch",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",149,"^8",7,"^9",149,"^:",13,"^5>",["^Z",["^5?",["^Z",[["~$p","~$success","~$failure"]]]]]],"^G","~$promesa.core/branch","^5B",false,"^6","promesa/core.cljc","^:",13,"^5D",["^Z",[["~$p","^5O","^5P"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",149,"^9",149,"^5C",3,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["~$p","^5O","^5P"]]]]]],"~$attempt",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",276,"^8",7,"^9",276,"^:",14,"^5>",["^Z",["^5?",["^Z",[["~$callback"]]]]],"^5@","A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback."],"^G","~$promesa.core/attempt","^5B",false,"^6","promesa/core.cljc","^:",14,"^5D",["^Z",[["^5S"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",276,"^9",276,"^5C",1,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["^5S"]]]]],"^5@","A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback."],"^A",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",107,"^8",7,"^9",107,"^:",10,"^5>",["^Z",["^5?",["^Z",[["~$f","~$p"]]]]],"^5@","Apply a function to the promise value and\n  return a new promise with the result."],"^G","~$promesa.core/map","^5B",false,"^6","promesa/core.cljc","^:",10,"^5D",["^Z",[["~$f","~$p"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",107,"^9",107,"^5C",2,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["~$f","~$p"]]]]],"^5@","Apply a function to the promise value and\n  return a new promise with the result."],"^B",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",262,"^8",7,"^9",262,"^:",12,"^5>",["^Z",["^5?",["^Z",[["~$t"],["~$t","~$v"]]]]],"^5@","Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached.","^5A",["^ ","^5B",false,"^5C",2,"^5D",["^Z",[["~$t"],["~$t","~$v"]]],"^5>",["^Z",[["~$t"],["~$t","~$v"]]],"^5E",["^Z",[null,null]]]],"^G","~$promesa.core/delay","^5B",false,"^6","promesa/core.cljc","^:",12,"^5A",["^ ","^5B",false,"^5C",2,"^5D",["^Z",[["~$t"],["~$t","~$v"]]],"^5>",["^Z",[["~$t"],["~$t","~$v"]]],"^5E",["^Z",[null,null]]],"^5D",["^Z",[["~$t"],["~$t","~$v"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",262,"^9",262,"^5C",2,"^5H",true,"^5>",["^Z",[["~$t"],["~$t","~$v"]]],"^5@","Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached."],"~$resolved?",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",81,"^8",7,"^9",81,"^:",16,"^5>",["^Z",["^5?",["^Z",[["~$p"]]]]],"^5@","Returns true if promise `p` is already fulfilled."],"^G","~$promesa.core/resolved?","^5B",false,"^6","promesa/core.cljc","^:",16,"^5D",["^Z",[["~$p"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",81,"^9",81,"^5C",1,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["~$p"]]]]],"^5@","Returns true if promise `p` is already fulfilled."],"^C",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",113,"^8",7,"^9",113,"^:",13,"^5>",["^Z",["^5?",["^Z",[["~$f","~$p"]]]]],"^5@","Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator."],"^G","~$promesa.core/mapcat","^5B",false,"^6","promesa/core.cljc","^:",13,"^5D",["^Z",[["~$f","~$p"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",113,"^9",113,"^5C",2,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["~$f","~$p"]]]]],"^5@","Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator."],"~$cancelled?",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",231,"^8",7,"^9",231,"^:",17,"^5>",["^Z",["^5?",["^Z",[["~$v"]]]]],"^5@","Return true if `v` is a cancelled promise."],"^G","~$promesa.core/cancelled?","^5B",false,"^6","promesa/core.cljc","^:",17,"^5D",["^Z",[["~$v"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",231,"^9",231,"^5C",1,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["~$v"]]]]],"^5@","Return true if `v` is a cancelled promise."],"^D",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",294,"^8",7,"^9",294,"^:",12,"^5>",["^Z",["^5?",["^Z",[["~$&","~$args"]]]]],"^5A",["^ ","^5B",true,"^5C",0,"^5D",[["^Z",["^60"]]],"^5>",["^Z",[["~$&","^60"]]],"^5E",["^Z",[null]]]],"^G","~$promesa.core/await","^5B",true,"^6","promesa/core.cljc","^:",12,"^5A",["^ ","^5B",true,"^5C",0,"^5D",[["^Z",["^60"]]],"^5>",["^Z",[["~$&","^60"]]],"^5E",["^Z",[null]]],"^5D",[["^Z",["^60"]]],"^5G",null,"^5E",["^Z",[null]],"^8",1,"^7",294,"^9",294,"^5C",0,"^5H",true,"^5>",["^Z",[["~$&","^60"]]]],"~$bind",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",124,"^8",7,"^9",124,"^:",11,"^5>",["^Z",["^5?",["^Z",[["~$p","~$f"]]]]],"^5@","A chain helper for promises."],"^G","~$promesa.core/bind","^5B",false,"^6","promesa/core.cljc","^:",11,"^5D",["^Z",[["~$p","~$f"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",124,"^9",124,"^5C",2,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["~$p","~$f"]]]]],"^5@","A chain helper for promises."],"~$any",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",213,"^8",7,"^9",213,"^:",10,"^5>",["^Z",["^5?",["^Z",[["~$promises"]]]]],"^5@","Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled."],"^G","~$promesa.core/any","^5B",false,"^6","promesa/core.cljc","^:",10,"^5D",["^Z",[["^65"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",213,"^9",213,"^5C",1,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["^65"]]]]],"^5@","Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled."],"~$finally",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",177,"^8",7,"^9",177,"^:",14,"^5>",["^Z",["^5?",["^Z",[["~$p","^5S"]]]]],"^5@","Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected."],"^G","~$promesa.core/finally","^5B",false,"^6","promesa/core.cljc","^:",14,"^5D",["^Z",[["~$p","^5S"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",177,"^9",177,"^5C",2,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["~$p","^5S"]]]]],"^5@","Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected."],"~$schedule",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",47,"^8",7,"^9",47,"^:",15,"^5>",["^Z",["^5?",["^Z",[["~$ms","~$func"]]]]],"^5@","Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function."],"^G","~$promesa.core/schedule","^5B",false,"^6","promesa/core.cljc","^:",15,"^5D",["^Z",[["^6:","^6;"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",47,"^9",47,"^5C",2,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["^6:","^6;"]]]]],"^5@","Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function."],"~$promisify",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",238,"^8",7,"^9",238,"^:",16,"^5>",["^Z",["^5?",["^Z",[["~$callable"]]]]],"^5@","Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation)."],"^G","~$promesa.core/promisify","^5B",false,"^6","promesa/core.cljc","^:",16,"^5D",["^Z",[["^6>"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",238,"^9",238,"^5C",1,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["^6>"]]]]],"^5@","Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation)."],"~$rejected",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",63,"^8",7,"^9",63,"^:",15,"^5>",["^Z",["^5?",["^Z",[["~$v"]]]]],"^5@","Return a rejected promise with provided reason."],"^G","~$promesa.core/rejected","^5B",false,"^6","promesa/core.cljc","^:",15,"^5D",["^Z",[["~$v"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",63,"^9",63,"^5C",1,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["~$v"]]]]],"^5@","Return a rejected promise with provided reason."],"^F",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",68,"^8",7,"^9",68,"^:",14,"^5>",["^Z",["^5?",["^Z",[["~$v"]]]]],"^5@","The promise constructor."],"^G","~$promesa.core/promise","^5B",false,"^6","promesa/core.cljc","^:",14,"^5D",["^Z",[["~$v"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",68,"^9",68,"^5C",1,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["~$v"]]]]],"^5@","The promise constructor."],"~$cancel!",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",225,"^8",7,"^9",225,"^:",14,"^5>",["^Z",["^5?",["^Z",[["~$p"]]]]],"^5@","Cancel the promise."],"^G","~$promesa.core/cancel!","^5B",false,"^6","promesa/core.cljc","^:",14,"^5D",["^Z",[["~$p"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",225,"^9",225,"^5C",1,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["~$p"]]]]],"^5@","Cancel the promise."],"~$done?",["^ ","^G","~$promesa.core/done?","^6","promesa/core.cljc","^7",101,"^8",1,"^9",101,"^:",11,"^5",["^ ","^6","promesa/core.cljc","^7",101,"^8",6,"^9",101,"^:",11],"^5@","Returns true if promise `p` is already done.","^5L","^64"],"~$err",["^ ","^G","~$promesa.core/err","^6","promesa/core.cljc","^7",173,"^8",1,"^9",173,"^:",9,"^5",["^ ","^6","promesa/core.cljc","^7",173,"^8",6,"^9",173,"^:",9],"^5@","A short alias for `error` function."],"~$all",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",187,"^8",7,"^9",187,"^:",10,"^5>",["^Z",["^5?",["^Z",[["^65"]]]]],"^5@","Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled.\n\n  Example:\n\n  (-> (all [(promise :first-promise)\n            (promise :second-promise)]\n      (then (fn [[first-result second-result]]))\n       (println (str first-result \", \" second-result)\n\n  Will print out\n  :first-promise, :second-promise.\n\n  If at least one of the promises is rejected, the resulting promise will be\n  rejected."],"^G","~$promesa.core/all","^5B",false,"^6","promesa/core.cljc","^:",10,"^5D",["^Z",[["^65"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",187,"^9",187,"^5C",1,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["^65"]]]]],"^5@","Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled.\n\n  Example:\n\n  (-> (all [(promise :first-promise)\n            (promise :second-promise)]\n      (then (fn [[first-result second-result]]))\n       (println (str first-result \", \" second-result)\n\n  Will print out\n  :first-promise, :second-promise.\n\n  If at least one of the promises is rejected, the resulting promise will be\n  rejected."],"~$promise?",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",73,"^8",7,"^9",73,"^:",15,"^5>",["^Z",["^5?",["^Z",[["~$v"]]]]],"^5@","Return true if `v` is a promise instance."],"^G","~$promesa.core/promise?","^5B",false,"^6","promesa/core.cljc","^:",15,"^5D",["^Z",[["~$v"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",73,"^9",73,"^5C",1,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["~$v"]]]]],"^5@","Return true if `v` is a promise instance."],"~$resolved",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",58,"^8",7,"^9",58,"^:",15,"^5>",["^Z",["^5?",["^Z",[["~$v"]]]]],"^5@","Return a resolved promise with provided value."],"^G","~$promesa.core/resolved","^5B",false,"^6","promesa/core.cljc","^:",15,"^5D",["^Z",[["~$v"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",58,"^9",58,"^5C",1,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["~$v"]]]]],"^5@","Return a resolved promise with provided value."],"~$catch",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",155,"^8",7,"^9",155,"^:",12,"^5>",["^Z",["^5?",["^Z",[["~$p","~$f"],["~$p","~$pred-or-type","~$f"]]]]],"^5@","Catch all promise chain helper.","^5A",["^ ","^5B",false,"^5C",3,"^5D",["^Z",[["~$p","~$f"],["~$p","^6P","~$f"]]],"^5>",["^Z",[["~$p","~$f"],["~$p","^6P","~$f"]]],"^5E",["^Z",[null,null]]]],"^G","~$promesa.core/catch","^5B",false,"^6","promesa/core.cljc","^:",12,"^5A",["^ ","^5B",false,"^5C",3,"^5D",["^Z",[["~$p","~$f"],["~$p","^6P","~$f"]]],"^5>",["^Z",[["~$p","~$f"],["~$p","^6P","~$f"]]],"^5E",["^Z",[null,null]]],"^5D",["^Z",[["~$p","~$f"],["~$p","^6P","~$f"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",155,"^9",155,"^5C",3,"^5H",true,"^5>",["^Z",[["~$p","~$f"],["~$p","^6P","~$f"]]],"^5@","Catch all promise chain helper."],"~$chain",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",144,"^8",7,"^9",144,"^:",12,"^5>",["^Z",["^5?",["^Z",[["~$p","~$&","~$funcs"]]]]],"^5@","Like then but accepts multiple parameters.","^5A",["^ ","^5B",true,"^5C",1,"^5D",[["^Z",["~$p","^6S"]]],"^5>",["^Z",[["~$p","~$&","^6S"]]],"^5E",["^Z",[null]]]],"^G","~$promesa.core/chain","^5B",true,"^6","promesa/core.cljc","^:",12,"^5A",["^ ","^5B",true,"^5C",1,"^5D",[["^Z",["~$p","^6S"]]],"^5>",["^Z",[["~$p","~$&","^6S"]]],"^5E",["^Z",[null]]],"^5D",[["^Z",["~$p","^6S"]]],"^5G",null,"^5E",["^Z",[null]],"^8",1,"^7",144,"^9",144,"^5C",1,"^5H",true,"^5>",["^Z",[["~$p","~$&","^6S"]]],"^5@","Like then but accepts multiple parameters."],"~$rejected?",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",86,"^8",7,"^9",86,"^:",16,"^5>",["^Z",["^5?",["^Z",[["~$p"]]]]],"^5@","Returns true if promise `p` is already rejected."],"^G","~$promesa.core/rejected?","^5B",false,"^6","promesa/core.cljc","^:",16,"^5D",["^Z",[["~$p"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",86,"^9",86,"^5C",1,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["~$p"]]]]],"^5@","Returns true if promise `p` is already rejected."],"~$then",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",129,"^8",7,"^9",129,"^:",11,"^5>",["^Z",["^5?",["^Z",[["~$p","~$f"]]]]],"^5@","Similar to `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator.\n\n  Unlike Clojure's `map`, will resolve any promises\n  returned  by `f`."],"^G","~$promesa.core/then","^5B",false,"^6","promesa/core.cljc","^:",11,"^5D",["^Z",[["~$p","~$f"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",129,"^9",129,"^5C",2,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["~$p","~$f"]]]]],"^5@","Similar to `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator.\n\n  Unlike Clojure's `map`, will resolve any promises\n  returned  by `f`."],"~$extract",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",96,"^8",7,"^9",96,"^:",14,"^5>",["^Z",["^5?",["^Z",[["~$p"]]]]],"^5@","Returns the current promise value."],"^G","~$promesa.core/extract","^5B",false,"^6","promesa/core.cljc","^:",14,"^5D",["^Z",[["~$p"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",96,"^9",96,"^5C",1,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["~$p"]]]]],"^5@","Returns the current promise value."],"~$error",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",168,"^8",7,"^9",168,"^:",12,"^5>",["^Z",["^5?",["^Z",[["~$f","~$p"],["~$f","~$type","~$p"]]]]],"^5@","Same as `catch` but with parameters inverted.","^5A",["^ ","^5B",false,"^5C",3,"^5D",["^Z",[["~$f","~$p"],["~$f","^70","~$p"]]],"^5>",["^Z",[["~$f","~$p"],["~$f","^70","~$p"]]],"^5E",["^Z",[null,null]]]],"^G","~$promesa.core/error","^5B",false,"^6","promesa/core.cljc","^:",12,"^5A",["^ ","^5B",false,"^5C",3,"^5D",["^Z",[["~$f","~$p"],["~$f","^70","~$p"]]],"^5>",["^Z",[["~$f","~$p"],["~$f","^70","~$p"]]],"^5E",["^Z",[null,null]]],"^5D",["^Z",[["~$f","~$p"],["~$f","^70","~$p"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",168,"^9",168,"^5C",3,"^5H",true,"^5>",["^Z",[["~$f","~$p"],["~$f","^70","~$p"]]],"^5@","Same as `catch` but with parameters inverted."],"~$pending?",["^ ","^5=",null,"^5",["^ ","^6","promesa/core.cljc","^7",91,"^8",7,"^9",91,"^:",15,"^5>",["^Z",["^5?",["^Z",[["~$p"]]]]],"^5@","Returns true if promise `p` is stil pending."],"^G","~$promesa.core/pending?","^5B",false,"^6","promesa/core.cljc","^:",15,"^5D",["^Z",[["~$p"]]],"^5G",null,"^5E",["^Z",[null,null]],"^8",1,"^7",91,"^9",91,"^5C",1,"^5H",true,"^5>",["^Z",["^5?",["^Z",[["~$p"]]]]],"^5@","Returns true if promise `p` is stil pending."]],"^X",["^ ","^S","^S"],"~:cljs.analyzer/constants",["^ ","^U",["^@",["~:else"]],"~:order",["^75"]],"^13",["^ ","^V",["^@",[]]],"^14",["^ "],"^15",["^T","^S","^M","^O","^Q"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^4J",[["^79","~:static-fns"],true,["^79","~:elide-asserts"],false,["^79","~:optimize-constants"],null,["^79","~:external-config"],null,["^79","~:tooling-config"],null,["^79","~:emit-constants"],null,["^79","~:infer-externs"],true,["^79","^1<"],null,["~:js-options","~:js-provider"],"^V",["~:mode"],"~:dev",["^79","~:fn-invoke-direct"],null,["^79","^1>"],"/dev/null"]]]