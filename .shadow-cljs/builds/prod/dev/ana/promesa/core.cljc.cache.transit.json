["^ ","~:output",["^ ","~:js","goog.provide('promesa.core');\ngoog.require('cljs.core');\ngoog.require('promesa.protocols');\ngoog.require('promesa.impl');\ngoog.require('promesa.impl.scheduler');\npromesa.core.Promise = promesa.impl.Promise;\n/**\n * Schedule a callable to be executed after the `ms` delay\n *   is reached.\n * \n *   In JVM it uses a scheduled executor service and in JS\n *   it uses the `setTimeout` function.\n */\npromesa.core.schedule = (function promesa$core$schedule(ms,func){\nreturn promesa.impl.scheduler.schedule(ms,func);\n});\n/**\n * Return a resolved promise with provided value.\n */\npromesa.core.resolved = (function promesa$core$resolved(v){\nreturn promesa.impl.resolved(v);\n});\n/**\n * Return a rejected promise with provided reason.\n */\npromesa.core.rejected = (function promesa$core$rejected(v){\nreturn promesa.impl.rejected(v);\n});\n/**\n * The promise constructor.\n */\npromesa.core.promise = (function promesa$core$promise(v){\nreturn promesa.protocols._promise(v);\n});\n/**\n * Return true if `v` is a promise instance.\n */\npromesa.core.promise_QMARK_ = (function promesa$core$promise_QMARK_(v){\nreturn (v instanceof promesa.core.Promise);\n});\n/**\n * Returns true if promise `p` is already fulfilled.\n */\npromesa.core.resolved_QMARK_ = (function promesa$core$resolved_QMARK_(p){\nreturn promesa.protocols._resolved_QMARK_(p);\n});\n/**\n * Returns true if promise `p` is already rejected.\n */\npromesa.core.rejected_QMARK_ = (function promesa$core$rejected_QMARK_(p){\nreturn promesa.protocols._rejected_QMARK_(p);\n});\n/**\n * Returns true if promise `p` is stil pending.\n */\npromesa.core.pending_QMARK_ = (function promesa$core$pending_QMARK_(p){\nreturn promesa.protocols._pending_QMARK_(p);\n});\n/**\n * Returns the current promise value.\n */\npromesa.core.extract = (function promesa$core$extract(p){\nreturn promesa.protocols._extract(p);\n});\n/**\n * Returns true if promise `p` is already done.\n */\npromesa.core.done_QMARK_ = cljs.core.complement(promesa.core.pending_QMARK_);\n/**\n * Apply a function to the promise value and\n *   return a new promise with the result.\n */\npromesa.core.map = (function promesa$core$map(f,p){\nreturn promesa.protocols._map(p,f);\n});\n/**\n * Same as `map` but removes one level of\n *   promise neesting. Useful when the map function\n *   returns a promise instead of value.\n * \n *   In JS environment this function is analogous\n *   to `map` because the promise abstraction overloads\n *   the `map` operator.\n */\npromesa.core.mapcat = (function promesa$core$mapcat(f,p){\nreturn promesa.protocols._bind(p,f);\n});\n/**\n * A chain helper for promises.\n */\npromesa.core.bind = (function promesa$core$bind(p,f){\nreturn promesa.protocols._bind(p,f);\n});\n/**\n * Similar to `map` but with parameters inverted\n *   for convenience and for familiarity with\n *   javascript's promises `.then` operator.\n * \n *   Unlike Clojure's `map`, will resolve any promises\n *   returned  by `f`.\n */\npromesa.core.then = (function promesa$core$then(p,f){\nreturn promesa.protocols._map(p,f);\n});\n/**\n * Like then but accepts multiple parameters.\n */\npromesa.core.chain = (function promesa$core$chain(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___4891 = arguments.length;\nvar i__4532__auto___4892 = (0);\nwhile(true){\nif((i__4532__auto___4892 < len__4531__auto___4891)){\nargs__4534__auto__.push((arguments[i__4532__auto___4892]));\n\nvar G__4895 = (i__4532__auto___4892 + (1));\ni__4532__auto___4892 = G__4895;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\npromesa.core.chain.cljs$core$IFn$_invoke$arity$variadic = (function (p,funcs){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__4870_SHARP_,p2__4871_SHARP_){\nreturn promesa.core.then(p1__4870_SHARP_,p2__4871_SHARP_);\n}),p,funcs);\n});\n\npromesa.core.chain.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\npromesa.core.chain.cljs$lang$applyTo = (function (seq4873){\nvar G__4874 = cljs.core.first(seq4873);\nvar seq4873__$1 = cljs.core.next(seq4873);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4874,seq4873__$1);\n});\n\npromesa.core.branch = (function promesa$core$branch(p,success,failure){\nreturn promesa.protocols._catch(promesa.protocols._map(p,success),failure);\n});\n/**\n * Catch all promise chain helper.\n */\npromesa.core.catch$ = (function promesa$core$catch(var_args){\nvar G__4914 = arguments.length;\nswitch (G__4914) {\ncase 2:\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.catch$.cljs$core$IFn$_invoke$arity$2 = (function (p,f){\nreturn promesa.protocols._catch(p,f);\n});\n\npromesa.core.catch$.cljs$core$IFn$_invoke$arity$3 = (function (p,pred_or_type,f){\nvar accept_QMARK_ = ((cljs.core.ifn_QMARK_(pred_or_type))?pred_or_type:(function (p1__4911_SHARP_){\nreturn (p1__4911_SHARP_ instanceof pred_or_type);\n}));\nreturn promesa.protocols._catch(p,((function (accept_QMARK_){\nreturn (function (e){\nif(cljs.core.truth_((accept_QMARK_.cljs$core$IFn$_invoke$arity$1 ? accept_QMARK_.cljs$core$IFn$_invoke$arity$1(e) : accept_QMARK_.call(null,e)))){\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(e) : f.call(null,e));\n} else {\nreturn promesa.impl.rejected(e);\n}\n});})(accept_QMARK_))\n);\n});\n\npromesa.core.catch$.cljs$lang$maxFixedArity = 3;\n\n/**\n * Same as `catch` but with parameters inverted.\n */\npromesa.core.error = (function promesa$core$error(var_args){\nvar G__4927 = arguments.length;\nswitch (G__4927) {\ncase 2:\nreturn promesa.core.error.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn promesa.core.error.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.error.cljs$core$IFn$_invoke$arity$2 = (function (f,p){\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2(p,f);\n});\n\npromesa.core.error.cljs$core$IFn$_invoke$arity$3 = (function (f,type,p){\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$3(p,type,f);\n});\n\npromesa.core.error.cljs$lang$maxFixedArity = 3;\n\n/**\n * A short alias for `error` function.\n */\npromesa.core.err = promesa.core.error;\n/**\n * Attach handler to promise that will be\n *   executed independently if promise is\n *   resolved or rejected.\n */\npromesa.core.finally$ = (function promesa$core$finally(p,callback){\nreturn p.lastly(callback);\n});\n/**\n * Given an array of promises, return a promise\n *   that is fulfilled  when all the items in the\n *   array are fulfilled.\n * \n *   Example:\n * \n *   (-> (all [(promise :first-promise)\n *          (promise :second-promise)]\n *    (then (fn [[first-result second-result]]))\n *     (println (str first-result \", \" second-result)\n * \n *   Will print out\n *   :first-promise, :second-promise.\n * \n *   If at least one of the promises is rejected, the resulting promise will be\n *   rejected.\n */\npromesa.core.all = (function promesa$core$all(promises){\nreturn promesa.core.then(promesa.core.Promise.all(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(promises)),cljs.core.vec);\n});\n/**\n * Given an array of promises, return a promise\n *   that is fulfilled when first one item in the\n *   array is fulfilled.\n */\npromesa.core.any = (function promesa$core$any(promises){\nreturn promesa.core.Promise.any(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(promises));\n});\n/**\n * Cancel the promise.\n */\npromesa.core.cancel_BANG_ = (function promesa$core$cancel_BANG_(p){\npromesa.protocols._cancel(p);\n\nreturn p;\n});\n/**\n * Return true if `v` is a cancelled promise.\n */\npromesa.core.cancelled_QMARK_ = (function promesa$core$cancelled_QMARK_(v){\nreturn promesa.protocols._cancelled_QMARK_(v);\n});\n/**\n * Given a function that accepts a callback as the last argument return other\n *   function that returns a promise. Callback is expected to take single\n *   parameter (result of a computation).\n */\npromesa.core.promisify = (function promesa$core$promisify(callable){\nreturn (function() { \nvar G__4955__delegate = function (args){\nreturn promesa.core.promise((function (resolve,reject){\nvar args__$1 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(args),resolve);\ntry{return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(callable,args__$1);\n}catch (e4954){if((e4954 instanceof Error)){\nvar e = e4954;\nreturn (reject.cljs$core$IFn$_invoke$arity$1 ? reject.cljs$core$IFn$_invoke$arity$1(e) : reject.call(null,e));\n} else {\nthrow e4954;\n\n}\n}}));\n};\nvar G__4955 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__4961__i = 0, G__4961__a = new Array(arguments.length -  0);\nwhile (G__4961__i < G__4961__a.length) {G__4961__a[G__4961__i] = arguments[G__4961__i + 0]; ++G__4961__i;}\n  args = new cljs.core.IndexedSeq(G__4961__a,0,null);\n} \nreturn G__4955__delegate.call(this,args);};\nG__4955.cljs$lang$maxFixedArity = 0;\nG__4955.cljs$lang$applyTo = (function (arglist__4962){\nvar args = cljs.core.seq(arglist__4962);\nreturn G__4955__delegate(args);\n});\nG__4955.cljs$core$IFn$_invoke$arity$variadic = G__4955__delegate;\nreturn G__4955;\n})()\n;\n});\n/**\n * Returns a cancellable promise that will be fulfilled\n *   with this promise's fulfillment value or rejection reason.\n *   However, if this promise is not fulfilled or rejected\n *   within `ms` milliseconds, the returned promise is cancelled\n *   with a TimeoutError\n */\npromesa.core.timeout = (function promesa$core$timeout(var_args){\nvar G__4965 = arguments.length;\nswitch (G__4965) {\ncase 2:\nreturn promesa.core.timeout.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn promesa.core.timeout.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.timeout.cljs$core$IFn$_invoke$arity$2 = (function (p,t){\nreturn p.timeout(t);\n});\n\npromesa.core.timeout.cljs$core$IFn$_invoke$arity$3 = (function (p,t,v){\nreturn p.timeout(t,v);\n});\n\npromesa.core.timeout.cljs$lang$maxFixedArity = 3;\n\n/**\n * Given a timeout in miliseconds and optional\n *   value, returns a promise that will fulfilled\n *   with provided value (or nil) after the\n *   time is reached.\n */\npromesa.core.delay = (function promesa$core$delay(var_args){\nvar G__4981 = arguments.length;\nswitch (G__4981) {\ncase 1:\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.delay.cljs$core$IFn$_invoke$arity$1 = (function (t){\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$2(t,null);\n});\n\npromesa.core.delay.cljs$core$IFn$_invoke$arity$2 = (function (t,v){\nreturn promesa.core.promise((function (resolve,reject){\nreturn promesa.core.schedule(t,(function (){\nreturn (resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(v) : resolve.call(null,v));\n}));\n}));\n});\n\npromesa.core.delay.cljs$lang$maxFixedArity = 2;\n\n/**\n * A helper for start promise chain without worry about\n *   synchronous or asynchronous exceptions. Returns a promise\n *   resolved with the return value of the callback.\n */\npromesa.core.attempt = (function promesa$core$attempt(callback){\nreturn promesa.core.promise((function (resolve){\nvar G__4987 = (callback.cljs$core$IFn$_invoke$arity$0 ? callback.cljs$core$IFn$_invoke$arity$0() : callback.call(null));\nreturn (resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(G__4987) : resolve.call(null,G__4987));\n}));\n});\npromesa.core.await$ = (function promesa$core$await(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___4996 = arguments.length;\nvar i__4532__auto___4997 = (0);\nwhile(true){\nif((i__4532__auto___4997 < len__4531__auto___4996)){\nargs__4534__auto__.push((arguments[i__4532__auto___4997]));\n\nvar G__4998 = (i__4532__auto___4997 + (1));\ni__4532__auto___4997 = G__4998;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((0) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((0)),(0),null)):null);\nreturn promesa.core.await$.cljs$core$IFn$_invoke$arity$variadic(argseq__4535__auto__);\n});\n\npromesa.core.await$.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Should be only used in alet macro.\",cljs.core.PersistentArrayMap.EMPTY);\n});\n\npromesa.core.await$.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\npromesa.core.await$.cljs$lang$applyTo = (function (seq4991){\nvar self__4519__auto__ = this;\nreturn self__4519__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4991));\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","promesa/core.cljc","~:line",25,"~:column",5,"~:end-line",25,"~:end-column",17],"~:use-macros",null,"~:excludes",["~#set",["~$map","~$delay","~$mapcat","~$await","~$spread","~$promise"]],"~:name","~$promesa.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$promesa.protocols","^J","~$pt","^J","~$promesa.impl","^L","~$impl","^L","~$promesa.impl.scheduler","^N","~$ps","^N","~$cljs.core","^P","~$goog","^Q"],"~:seen",["^=",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^P","^P"],"~:form",["~#list",["~$ns","^E",["^W",["~:refer-clojure","~:exclude",["^?","^B","^C","^A","^>","^@"]]],["^W",["^S",["^J","~:as","^K"],["^L","^[","^M"],["^N","^[","^O"]]]]],"~:flags",["^ ","^S",["^=",[]]],"~:js-deps",["^ "],"~:deps",["^Q","^P","^J","^L","^N"]],"^G","^E","~:resource-id",["~:shadow.build.classpath/resource","promesa/core.cljc"],"~:compiled-at",1537724591261,"~:resource-name","promesa/core.cljc","~:warnings",[],"~:source",";; Copyright (c) 2015-2016 Andrey Antukh <niwi@niwi.nz>\n;; All rights reserved.\n;;\n;; Redistribution and use in source and binary forms, with or without\n;; modification, are permitted provided that the following conditions\n;; are met:\n;;\n;; 1. Redistributions of source code must retain the above copyright\n;;    notice, this list of conditions and the following disclaimer.\n;; 2. Redistributions in binary form must reproduce the above copyright\n;;    notice, this list of conditions and the following disclaimer in the\n;;    documentation and/or other materials provided with the distribution.\n;;\n;; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n;; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n;; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n;; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n;; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n;; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n;; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n;; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n;; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n;; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n(ns promesa.core\n  (:refer-clojure :exclude [delay spread promise await map mapcat])\n  (:require [promesa.protocols :as pt]\n            [promesa.impl :as impl]\n            [promesa.impl.scheduler :as ps])\n  #?(:clj\n     (:import java.util.concurrent.CompletableFuture\n              java.util.concurrent.CompletionStage)))\n\n;; --- Global Constants\n\n#?(:clj\n   (defn set-executor!\n     \"Replace the default executor instance with\n     your own instance.\"\n     [executor]\n     (alter-var-root #'impl/+executor+ (constantly executor))))\n\n#?(:cljs (def ^:const Promise impl/Promise))\n\n;; --- Scheduling helpers\n\n(defn schedule\n  \"Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function.\"\n  [ms func]\n  (ps/schedule ms func))\n\n;; --- Promise\n\n(defn resolved\n  \"Return a resolved promise with provided value.\"\n  [v]\n  (impl/resolved v))\n\n(defn rejected\n  \"Return a rejected promise with provided reason.\"\n  [v]\n  (impl/rejected v))\n\n(defn promise\n  \"The promise constructor.\"\n  [v]\n  (pt/-promise v))\n\n(defn promise?\n  \"Return true if `v` is a promise instance.\"\n  [v]\n  #?(:clj (instance? CompletionStage v)\n     :cljs (instance? Promise v)))\n\n;; Predicates\n\n(defn resolved?\n  \"Returns true if promise `p` is already fulfilled.\"\n  [p]\n  (pt/-resolved? p))\n\n(defn rejected?\n  \"Returns true if promise `p` is already rejected.\"\n  [p]\n  (pt/-rejected? p))\n\n(defn pending?\n  \"Returns true if promise `p` is stil pending.\"\n  [p]\n  (pt/-pending? p))\n\n(defn extract\n  \"Returns the current promise value.\"\n  [p]\n  (pt/-extract p))\n\n(def done?\n  \"Returns true if promise `p` is already done.\"\n  (complement pending?))\n\n;; Chaining\n\n(defn map\n  \"Apply a function to the promise value and\n  return a new promise with the result.\"\n  [f p]\n  (pt/-map p f))\n\n(defn mapcat\n  \"Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator.\"\n  [f p]\n  (pt/-bind p f))\n\n(defn bind\n  \"A chain helper for promises.\"\n  [p f]\n  (pt/-bind p f))\n\n(defn then\n  \"Similar to `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator.\n\n  Unlike Clojure's `map`, will resolve any promises\n  returned  by `f`.\"\n  [p f]\n  #?(:cljs (pt/-map p f)\n     :clj  (pt/-bind p (fn promise-wrap [in]\n                         (let [out (f in)]\n                           (if (promise? out)\n                             out\n                             (promise out)))))))\n\n(defn chain\n  \"Like then but accepts multiple parameters.\"\n  [p & funcs]\n  (reduce #(then %1 %2) p funcs))\n\n(defn branch\n  [p success failure]\n  (-> p\n      (pt/-map success)\n      (pt/-catch failure)))\n\n(defn catch\n  \"Catch all promise chain helper.\"\n  ([p f]\n   (pt/-catch p f))\n  ([p pred-or-type f]\n   (let [accept? (if (ifn? pred-or-type)\n                   pred-or-type\n                   #(instance? pred-or-type %))]\n     (pt/-catch p (fn [e]\n                    (if (accept? e)\n                      (f e)\n                      (impl/rejected e)))))))\n\n(defn error\n  \"Same as `catch` but with parameters inverted.\"\n  ([f p] (catch p f))\n  ([f type p] (catch p type f)))\n\n(def err\n  \"A short alias for `error` function.\"\n  error)\n\n(defn finally\n  \"Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected.\"\n  [p callback]\n  #?(:clj (-> p\n              (then (fn [_] (callback)))\n              (catch (fn [_] (callback))))\n     :cljs (.lastly p callback)))\n\n(defn all\n  \"Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled.\n\n  Example:\n\n  (-> (all [(promise :first-promise)\n            (promise :second-promise)]\n      (then (fn [[first-result second-result]]))\n       (println (str first-result \\\", \\\" second-result)\n\n  Will print out\n  :first-promise, :second-promise.\n\n  If at least one of the promises is rejected, the resulting promise will be\n  rejected.\"\n  [promises]\n  #?(:cljs (-> (.all Promise (into-array promises))\n               (then vec))\n     :clj (let [promises (clojure.core/map pt/-promise promises)]\n            (then (->> (into-array CompletableFuture promises)\n                       (CompletableFuture/allOf))\n                  (fn [_]\n                    (mapv pt/-extract promises))))))\n\n(defn any\n  \"Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled.\"\n  [promises]\n  #?(:cljs (.any Promise (into-array promises))\n     :clj (->> (clojure.core/map pt/-promise promises)\n               (into-array CompletableFuture)\n               (CompletableFuture/anyOf))))\n\n;; Cancellation\n\n(defn cancel!\n  \"Cancel the promise.\"\n  [p]\n  (pt/-cancel p)\n  p)\n\n(defn cancelled?\n  \"Return true if `v` is a cancelled promise.\"\n  [v]\n  (pt/-cancelled? v))\n\n;; Utils\n\n(defn promisify\n  \"Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation).\"\n  [callable]\n  (fn [& args]\n    (promise (fn [resolve reject]\n               (let [args (-> (vec args)\n                              (conj resolve))]\n                 (try\n                   (apply callable args)\n                   (catch #?(:clj Throwable :cljs js/Error) e\n                       (reject e))))))))\n\n#?(:cljs\n   (defn timeout\n     \"Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError\"\n     ([p t] (.timeout p t))\n     ([p t v] (.timeout p t v))))\n\n(defn delay\n  \"Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached.\"\n  ([t] (delay t nil))\n  ([t v]\n   #?(:cljs (promise (fn [resolve reject]\n                       (schedule t #(resolve v))))\n\n      :clj  (let [p (CompletableFuture.)]\n              (schedule t #(.complete p v))\n              p))))\n\n(defn attempt\n  \"A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback.\"\n  [callback]\n  #?(:cljs (promise (fn [resolve] (resolve (callback))))\n     :clj  (promise (fn [resolve reject]\n                      (let [result (callback)]\n                        (if (promise? result)\n                          (then result resolve)\n                          (resolve result)))))))\n\n#?(:clj\n   (defmacro do*\n     \"A sugar syntax on top of `attempt`.\"\n     [& body]\n     `(attempt #(do ~@body))))\n\n(defn await\n  [& args]\n  (throw (ex-info \"Should be only used in alet macro.\" {})))\n\n#?(:clj\n   (defmacro alet\n     \"A `let` alternative that always returns promise and allows\n     use `await` marker function in order to emulate the async/await\n     syntax and make the let expression look like synchronous where\n     async operations are performed.\"\n     [bindings & body]\n     (let [await# `await]\n       (->> (reverse (partition 2 bindings))\n            (reduce (fn [acc [l r]]\n                      (if (and (coll? r)\n                               (symbol? (first r))\n                               (not= \".\" (subs (name (first r)) 0 1)))\n                        `(if (= ~await# ~(first r))\n                           (bind ~(second r) (fn [~l] ~acc))\n                           (let [~l ~r] ~acc))\n                        `(let [~l ~r] ~acc)))\n                    `(promise (do ~@body)))))))\n","~:reader-features",["^=",["~:cljs"]],"~:source-map",["^ ","~i42",["^ ","~i9",[["^ ","~:gcol",0,"~:gline",5]],"~i22",[["^ ","^1=",0,"^1>",5,"^D","promesa.core/Promise"]],"~i30",[["^ ","^1=",23,"^1>",5,"^D","promesa.impl/Promise"]]],"~i46",["^ ","~i0",[["^ ","^1=",0,"^1>",6],["^ ","^1=",24,"^1>",13],["^ ","^1=",0,"^1>",14]],"~i6",[["^ ","^1=",0,"^1>",13,"^D","promesa.core/schedule"]]],"~i52",["^ ","~i3",[["^ ","^1=",56,"^1>",13,"^D","ms"]],"~i6",[["^ ","^1=",59,"^1>",13,"^D","func"]]],"~i53",["^ ","~i2",[["^ ","^1=",0,"^1>",14]],"~i3",[["^ ","^1=",7,"^1>",14,"^D","promesa.impl.scheduler/schedule"]],"~i15",[["^ ","^1=",39,"^1>",14,"^D","ms"]],"~i18",[["^ ","^1=",42,"^1>",14,"^D","func"]]],"~i57",["^ ","~i0",[["^ ","^1=",0,"^1>",16],["^ ","^1=",24,"^1>",19],["^ ","^1=",0,"^1>",20]],"~i6",[["^ ","^1=",0,"^1>",19,"^D","promesa.core/resolved"]]],"~i59",["^ ","~i3",[["^ ","^1=",56,"^1>",19,"^D","v"]]],"~i60",["^ ","~i2",[["^ ","^1=",0,"^1>",20]],"~i3",[["^ ","^1=",7,"^1>",20,"^D","promesa.impl/resolved"]],"~i17",[["^ ","^1=",29,"^1>",20,"^D","v"]]],"~i62",["^ ","~i0",[["^ ","^1=",0,"^1>",22],["^ ","^1=",24,"^1>",25],["^ ","^1=",0,"^1>",26]],"~i6",[["^ ","^1=",0,"^1>",25,"^D","promesa.core/rejected"]]],"~i64",["^ ","~i3",[["^ ","^1=",56,"^1>",25,"^D","v"]]],"~i65",["^ ","~i2",[["^ ","^1=",0,"^1>",26]],"~i3",[["^ ","^1=",7,"^1>",26,"^D","promesa.impl/rejected"]],"^1I",[["^ ","^1=",29,"^1>",26,"^D","v"]]],"~i67",["^ ","~i0",[["^ ","^1=",0,"^1>",28],["^ ","^1=",23,"^1>",31],["^ ","^1=",0,"^1>",32]],"~i6",[["^ ","^1=",0,"^1>",31,"^D","promesa.core/promise"]]],"~i69",["^ ","~i3",[["^ ","^1=",54,"^1>",31,"^D","v"]]],"~i70",["^ ","~i2",[["^ ","^1=",0,"^1>",32]],"~i3",[["^ ","^1=",7,"^1>",32,"^D","promesa.protocols/-promise"]],"^1D",[["^ ","^1=",34,"^1>",32,"^D","v"]]],"~i72",["^ ","~i0",[["^ ","^1=",0,"^1>",34],["^ ","^1=",30,"^1>",37],["^ ","^1=",0,"^1>",38]],"~i6",[["^ ","^1=",0,"^1>",37,"^D","promesa.core/promise?"]]],"~i74",["^ ","~i3",[["^ ","^1=",68,"^1>",37,"^D","v"]]],"~i76",["^ ","~i11",[["^ ","^1=",0,"^1>",38]],"^1?",[["^ ","^1=",21,"^1>",38,"^D","promesa.core/Promise"]],"^1@",[["^ ","^1=",8,"^1>",38,"^D","v"]]],"~i80",["^ ","~i0",[["^ ","^1=",0,"^1>",40],["^ ","^1=",31,"^1>",43],["^ ","^1=",0,"^1>",44]],"~i6",[["^ ","^1=",0,"^1>",43,"^D","promesa.core/resolved?"]]],"~i82",["^ ","~i3",[["^ ","^1=",70,"^1>",43,"^D","p"]]],"~i83",["^ ","~i2",[["^ ","^1=",0,"^1>",44]],"~i3",[["^ ","^1=",7,"^1>",44,"^D","promesa.protocols/-resolved?"]],"^1I",[["^ ","^1=",42,"^1>",44,"^D","p"]]],"~i85",["^ ","~i0",[["^ ","^1=",0,"^1>",46],["^ ","^1=",31,"^1>",49],["^ ","^1=",0,"^1>",50]],"~i6",[["^ ","^1=",0,"^1>",49,"^D","promesa.core/rejected?"]]],"~i87",["^ ","~i3",[["^ ","^1=",70,"^1>",49,"^D","p"]]],"~i88",["^ ","~i2",[["^ ","^1=",0,"^1>",50]],"~i3",[["^ ","^1=",7,"^1>",50,"^D","promesa.protocols/-rejected?"]],"^1I",[["^ ","^1=",42,"^1>",50,"^D","p"]]],"~i90",["^ ","~i0",[["^ ","^1=",0,"^1>",52],["^ ","^1=",30,"^1>",55],["^ ","^1=",0,"^1>",56]],"~i6",[["^ ","^1=",0,"^1>",55,"^D","promesa.core/pending?"]]],"~i92",["^ ","~i3",[["^ ","^1=",68,"^1>",55,"^D","p"]]],"~i93",["^ ","~i2",[["^ ","^1=",0,"^1>",56]],"~i3",[["^ ","^1=",7,"^1>",56,"^D","promesa.protocols/-pending?"]],"~i16",[["^ ","^1=",41,"^1>",56,"^D","p"]]],"~i95",["^ ","~i0",[["^ ","^1=",0,"^1>",58],["^ ","^1=",23,"^1>",61],["^ ","^1=",0,"^1>",62]],"~i6",[["^ ","^1=",0,"^1>",61,"^D","promesa.core/extract"]]],"~i97",["^ ","~i3",[["^ ","^1=",54,"^1>",61,"^D","p"]]],"~i98",["^ ","~i2",[["^ ","^1=",0,"^1>",62]],"~i3",[["^ ","^1=",7,"^1>",62,"^D","promesa.protocols/-extract"]],"^1D",[["^ ","^1=",34,"^1>",62,"^D","p"]]],"~i100",["^ ","~i0",[["^ ","^1=",0,"^1>",64]],"~i5",[["^ ","^1=",0,"^1>",67,"^D","promesa.core/done?"]]],"~i102",["^ ","~i2",[["^ ","^1=",27,"^1>",67]],"~i3",[["^ ","^1=",27,"^1>",67,"^D","cljs.core/complement"]],"~i14",[["^ ","^1=",48,"^1>",67,"^D","promesa.core/pending?"]]],"~i106",["^ ","~i0",[["^ ","^1=",0,"^1>",68],["^ ","^1=",19,"^1>",72],["^ ","^1=",0,"^1>",73]],"~i6",[["^ ","^1=",0,"^1>",72,"^D","promesa.core/map"]]],"~i109",["^ ","~i3",[["^ ","^1=",46,"^1>",72,"^D","f"]],"~i5",[["^ ","^1=",48,"^1>",72,"^D","p"]]],"~i110",["^ ","~i2",[["^ ","^1=",0,"^1>",73]],"~i3",[["^ ","^1=",7,"^1>",73,"^D","promesa.protocols/-map"]],"^1S",[["^ ","^1=",30,"^1>",73,"^D","p"]],"~i13",[["^ ","^1=",32,"^1>",73,"^D","f"]]],"~i112",["^ ","~i0",[["^ ","^1=",0,"^1>",75],["^ ","^1=",22,"^1>",84],["^ ","^1=",0,"^1>",85]],"~i6",[["^ ","^1=",0,"^1>",84,"^D","promesa.core/mapcat"]]],"~i120",["^ ","~i3",[["^ ","^1=",52,"^1>",84,"^D","f"]],"~i5",[["^ ","^1=",54,"^1>",84,"^D","p"]]],"~i121",["^ ","~i2",[["^ ","^1=",0,"^1>",85]],"~i3",[["^ ","^1=",7,"^1>",85,"^D","promesa.protocols/-bind"]],"~i12",[["^ ","^1=",31,"^1>",85,"^D","p"]],"^27",[["^ ","^1=",33,"^1>",85,"^D","f"]]],"~i123",["^ ","~i0",[["^ ","^1=",0,"^1>",87],["^ ","^1=",20,"^1>",90],["^ ","^1=",0,"^1>",91]],"~i6",[["^ ","^1=",0,"^1>",90,"^D","promesa.core/bind"]]],"~i125",["^ ","~i3",[["^ ","^1=",48,"^1>",90,"^D","p"]],"~i5",[["^ ","^1=",50,"^1>",90,"^D","f"]]],"~i126",["^ ","~i2",[["^ ","^1=",0,"^1>",91]],"~i3",[["^ ","^1=",7,"^1>",91,"^D","promesa.protocols/-bind"]],"^2?",[["^ ","^1=",31,"^1>",91,"^D","p"]],"^27",[["^ ","^1=",33,"^1>",91,"^D","f"]]],"~i128",["^ ","~i0",[["^ ","^1=",0,"^1>",93],["^ ","^1=",20,"^1>",101],["^ ","^1=",0,"^1>",102]],"~i6",[["^ ","^1=",0,"^1>",101,"^D","promesa.core/then"]]],"~i135",["^ ","~i3",[["^ ","^1=",48,"^1>",101,"^D","p"]],"~i5",[["^ ","^1=",50,"^1>",101,"^D","f"]]],"~i136",["^ ","^1S",[["^ ","^1=",0,"^1>",102]],"^2?",[["^ ","^1=",7,"^1>",102,"^D","promesa.protocols/-map"]],"~i20",[["^ ","^1=",30,"^1>",102,"^D","p"]],"^1?",[["^ ","^1=",32,"^1>",102,"^D","f"]]],"~i143",["^ ","~i0",[["^ ","^1=",0,"^1>",104],["^ ","^1=",0,"^1>",104],["^ ","^1=",21,"^1>",107],["^ ","^1=",50,"^1>",107,"^D","var_args"],["^ ","^1=",0,"^1>",108],["^ ","^1=",0,"^1>",108],["^ ","^1=",4,"^1>",108,"^D","args__4534__auto__"],["^ ","^1=",25,"^1>",108],["^ ","^1=",0,"^1>",109],["^ ","^1=",0,"^1>",109],["^ ","^1=",4,"^1>",109,"^D","len__4531__auto__"],["^ ","^1=",29,"^1>",109],["^ ","^1=",29,"^1>",109],["^ ","^1=",0,"^1>",110],["^ ","^1=",0,"^1>",110],["^ ","^1=",4,"^1>",110,"^D","i__4532__auto__"],["^ ","^1=",27,"^1>",110],["^ ","^1=",0,"^1>",112],["^ ","^1=",0,"^1>",112],["^ ","^1=",3,"^1>",112],["^ ","^1=",4,"^1>",112,"^D","i__4532__auto__"],["^ ","^1=",27,"^1>",112,"^D","len__4531__auto__"],["^ ","^1=",0,"^1>",113],["^ ","^1=",0,"^1>",113],["^ ","^1=",0,"^1>",113,"^D","args__4534__auto__"],["^ ","^1=",24,"^1>",113],["^ ","^1=",25,"^1>",113],["^ ","^1=",35,"^1>",113,"^D","i__4532__auto__"],["^ ","^1=",0,"^1>",115],["^ ","^1=",14,"^1>",115],["^ ","^1=",15,"^1>",115,"^D","i__4532__auto__"],["^ ","^1=",38,"^1>",115],["^ ","^1=",0,"^1>",119],["^ ","^1=",0,"^1>",123],["^ ","^1=",4,"^1>",123,"^D","argseq__4535__auto__"],["^ ","^1=",27,"^1>",123],["^ ","^1=",29,"^1>",123],["^ ","^1=",30,"^1>",123],["^ ","^1=",36,"^1>",123],["^ ","^1=",36,"^1>",123,"^D","args__4534__auto__"],["^ ","^1=",64,"^1>",123],["^ ","^1=",64,"^1>",123],["^ ","^1=",69,"^1>",123,"^D","cljs.core/IndexedSeq"],["^ ","^1=",90,"^1>",123],["^ ","^1=",90,"^1>",123,"^D","args__4534__auto__"],["^ ","^1=",115,"^1>",123],["^ ","^1=",120,"^1>",123],["^ ","^1=",124,"^1>",123],["^ ","^1=",131,"^1>",123],["^ ","^1=",0,"^1>",124],["^ ","^1=",0,"^1>",124],["^ ","^1=",7,"^1>",124,"^D","promesa.core/chain"],["^ ","^1=",63,"^1>",124],["^ ","^1=",64,"^1>",124],["^ ","^1=",74,"^1>",124],["^ ","^1=",80,"^1>",124,"^D","argseq__4535__auto__"],["^ ","^1=",0,"^1>",127],["^ ","^1=",0,"^1>",127],["^ ","^1=",0,"^1>",127],["^ ","^1=",0,"^1>",127,"^D","promesa.core/chain"],["^ ","^1=",58,"^1>",127],["^ ","^1=",0,"^1>",128],["^ ","^1=",0,"^1>",133],["^ ","^1=",0,"^1>",133],["^ ","^1=",0,"^1>",133,"^D","promesa.core/chain"],["^ ","^1=",45,"^1>",133],["^ ","^1=",0,"^1>",135],["^ ","^1=",0,"^1>",136],["^ ","^1=",0,"^1>",136],["^ ","^1=",0,"^1>",136,"^D","promesa.core/chain"],["^ ","^1=",39,"^1>",136],["^ ","^1=",50,"^1>",136,"^D","seq4873"],["^ ","^1=",0,"^1>",137],["^ ","^1=",0,"^1>",137],["^ ","^1=",4,"^1>",137,"^D","G__4874"],["^ ","^1=",14,"^1>",137],["^ ","^1=",14,"^1>",137,"^D","cljs.core/first"],["^ ","^1=",30,"^1>",137,"^D","seq4873"],["^ ","^1=",4,"^1>",138,"^D","seq4873"],["^ ","^1=",18,"^1>",138],["^ ","^1=",18,"^1>",138,"^D","cljs.core/next"],["^ ","^1=",33,"^1>",138,"^D","seq4873"],["^ ","^1=",0,"^1>",139],["^ ","^1=",0,"^1>",139],["^ ","^1=",4,"^1>",139,"^D","self__4518__auto__"],["^ ","^1=",25,"^1>",139],["^ ","^1=",0,"^1>",140],["^ ","^1=",0,"^1>",140],["^ ","^1=",7,"^1>",140,"^D","self__4518__auto__"],["^ ","^1=",63,"^1>",140,"^D","G__4874"],["^ ","^1=",71,"^1>",140,"^D","seq4873"],["^ ","^1=",0,"^1>",143]],"~i6",[["^ ","^1=",0,"^1>",107,"^D","promesa.core/chain"]]],"~i145",["^ ","~i3",[["^ ","^1=",69,"^1>",127,"^D","p"]],"~i7",[["^ ","^1=",71,"^1>",127,"^D","funcs"]]],"~i146",["^ ","~i2",[["^ ","^1=",0,"^1>",128],["^ ","^1=",54,"^1>",128],["^ ","^1=",65,"^1>",128,"^D","p1__4870#"],["^ ","^1=",81,"^1>",128,"^D","p2__4871#"],["^ ","^1=",0,"^1>",129]],"~i3",[["^ ","^1=",7,"^1>",128,"^D","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^1S",[["^ ","^1=",0,"^1>",129],["^ ","^1=",25,"^1>",129,"^D","p1__4870#"],["^ ","^1=",41,"^1>",129,"^D","p2__4871#"]],"^2?",[["^ ","^1=",7,"^1>",129,"^D","promesa.core/then"]],"~i24",[["^ ","^1=",3,"^1>",130,"^D","p"]],"~i26",[["^ ","^1=",5,"^1>",130,"^D","funcs"]]],"~i148",["^ ","~i0",[["^ ","^1=",0,"^1>",143],["^ ","^1=",22,"^1>",143],["^ ","^1=",0,"^1>",144]],"~i6",[["^ ","^1=",0,"^1>",143,"^D","promesa.core/branch"]]],"~i149",["^ ","~i3",[["^ ","^1=",52,"^1>",143,"^D","p"]],"~i5",[["^ ","^1=",54,"^1>",143,"^D","success"]],"^2;",[["^ ","^1=",62,"^1>",143,"^D","failure"]]],"~i150",["^ ","~i6",[["^ ","^1=",55,"^1>",144,"^D","p"]]],"~i151",["^ ","~i6",[["^ ","^1=",32,"^1>",144]],"~i7",[["^ ","^1=",32,"^1>",144,"^D","promesa.protocols/-map"]],"^1D",[["^ ","^1=",57,"^1>",144,"^D","success"]]],"~i152",["^ ","~i6",[["^ ","^1=",0,"^1>",144]],"~i7",[["^ ","^1=",7,"^1>",144,"^D","promesa.protocols/-catch"]],"^1I",[["^ ","^1=",66,"^1>",144,"^D","failure"]]],"~i154",["^ ","~i0",[["^ ","^1=",0,"^1>",146],["^ ","^1=",0,"^1>",146],["^ ","^1=",22,"^1>",149],["^ ","^1=",51,"^1>",149,"^D","var_args"],["^ ","^1=",0,"^1>",150],["^ ","^1=",0,"^1>",150],["^ ","^1=",4,"^1>",150,"^D","G__4914"],["^ ","^1=",14,"^1>",150],["^ ","^1=",14,"^1>",150],["^ ","^1=",0,"^1>",151],["^ ","^1=",0,"^1>",151],["^ ","^1=",8,"^1>",151,"^D","G__4914"],["^ ","^1=",5,"^1>",152],["^ ","^1=",0,"^1>",153],["^ ","^1=",7,"^1>",153,"^D","promesa.core/catch"],["^ ","^1=",57,"^1>",153],["^ ","^1=",58,"^1>",153],["^ ","^1=",68,"^1>",153],["^ ","^1=",74,"^1>",153],["^ ","^1=",75,"^1>",153],["^ ","^1=",85,"^1>",153],["^ ","^1=",5,"^1>",156],["^ ","^1=",0,"^1>",157],["^ ","^1=",7,"^1>",157,"^D","promesa.core/catch"],["^ ","^1=",57,"^1>",157],["^ ","^1=",58,"^1>",157],["^ ","^1=",68,"^1>",157],["^ ","^1=",74,"^1>",157],["^ ","^1=",75,"^1>",157],["^ ","^1=",85,"^1>",157],["^ ","^1=",91,"^1>",157],["^ ","^1=",92,"^1>",157],["^ ","^1=",102,"^1>",157],["^ ","^1=",0,"^1>",161],["^ ","^1=",6,"^1>",161],["^ ","^1=",11,"^1>",161,"^D","js/Error"],["^ ","^1=",17,"^1>",161],["^ ","^1=",18,"^1>",161],["^ ","^1=",80,"^1>",161],["^ ","^1=",80,"^1>",161],["^ ","^1=",0,"^1>",166],["^ ","^1=",0,"^1>",166],["^ ","^1=",52,"^1>",166],["^ ","^1=",0,"^1>",167],["^ ","^1=",0,"^1>",170],["^ ","^1=",0,"^1>",170],["^ ","^1=",52,"^1>",170],["^ ","^1=",0,"^1>",171],["^ ","^1=",0,"^1>",185],["^ ","^1=",0,"^1>",185],["^ ","^1=",46,"^1>",185],["^ ","^1=",0,"^1>",187]],"~i6",[["^ ","^1=",0,"^1>",149,"^D","promesa.core/catch"],["^ ","^1=",0,"^1>",166,"^D","promesa.core/catch"],["^ ","^1=",0,"^1>",170,"^D","promesa.core/catch"],["^ ","^1=",0,"^1>",185,"^D","promesa.core/catch"]]],"~i156",["^ ","~i4",[["^ ","^1=",63,"^1>",166,"^D","p"]],"~i6",[["^ ","^1=",65,"^1>",166,"^D","f"]]],"~i157",["^ ","~i3",[["^ ","^1=",0,"^1>",167]],"~i4",[["^ ","^1=",7,"^1>",167,"^D","promesa.protocols/-catch"]],"^27",[["^ ","^1=",32,"^1>",167,"^D","p"]],"^21",[["^ ","^1=",34,"^1>",167,"^D","f"]]],"~i158",["^ ","~i4",[["^ ","^1=",63,"^1>",170,"^D","p"]],"~i6",[["^ ","^1=",65,"^1>",170,"^D","pred-or-type"]],"~i19",[["^ ","^1=",78,"^1>",170,"^D","f"]]],"~i159",["^ ","~i3",[["^ ","^1=",0,"^1>",171],["^ ","^1=",0,"^1>",174]],"~i9",[["^ ","^1=",4,"^1>",171,"^D","accept?"]],"^1I",[["^ ","^1=",20,"^1>",171],["^ ","^1=",71,"^1>",171],["^ ","^1=",82,"^1>",171,"^D","p1__4911#"],["^ ","^1=",0,"^1>",172]],"~i21",[["^ ","^1=",22,"^1>",171]],"^1?",[["^ ","^1=",22,"^1>",171,"^D","cljs.core/ifn?"]],"~i27",[["^ ","^1=",43,"^1>",171,"^D","pred-or-type"]]],"~i160",["^ ","^2U",[["^ ","^1=",58,"^1>",171,"^D","pred-or-type"]]],"~i161",["^ ","^2F",[["^ ","^1=",0,"^1>",172],["^ ","^1=",8,"^1>",172,"^D","p1__4911#"]],"~i31",[["^ ","^1=",35,"^1>",172,"^D","pred-or-type"]]],"~i162",["^ ","~i5",[["^ ","^1=",0,"^1>",174]],"~i6",[["^ ","^1=",7,"^1>",174,"^D","promesa.protocols/-catch"]],"^21",[["^ ","^1=",32,"^1>",174,"^D","p"]],"^1E",[["^ ","^1=",34,"^1>",174],["^ ","^1=",0,"^1>",176]],"~i23",[["^ ","^1=",18,"^1>",175,"^D","e"]]],"~i163",["^ ","^2F",[["^ ","^1=",0,"^1>",176]],"^2J",[["^ ","^1=",20,"^1>",176]],"~i25",[["^ ","^1=",21,"^1>",176,"^D","accept?"],["^ ","^1=",67,"^1>",176,"^D","accept?"],["^ ","^1=",116,"^1>",176,"^D","accept?"]],"~i33",[["^ ","^1=",111,"^1>",176,"^D","e"],["^ ","^1=",140,"^1>",176,"^D","e"]]],"~i164",["^ ","^1?",[["^ ","^1=",0,"^1>",177]],"^31",[["^ ","^1=",8,"^1>",177,"^D","f"],["^ ","^1=",42,"^1>",177,"^D","f"],["^ ","^1=",79,"^1>",177,"^D","f"]],"^33",[["^ ","^1=",74,"^1>",177,"^D","e"],["^ ","^1=",91,"^1>",177,"^D","e"]]],"~i165",["^ ","^1?",[["^ ","^1=",0,"^1>",179]],"^31",[["^ ","^1=",7,"^1>",179,"^D","promesa.impl/rejected"]],"~i37",[["^ ","^1=",29,"^1>",179,"^D","e"]]],"~i167",["^ ","~i0",[["^ ","^1=",0,"^1>",187],["^ ","^1=",0,"^1>",187],["^ ","^1=",21,"^1>",190],["^ ","^1=",50,"^1>",190,"^D","var_args"],["^ ","^1=",0,"^1>",191],["^ ","^1=",0,"^1>",191],["^ ","^1=",4,"^1>",191,"^D","G__4927"],["^ ","^1=",14,"^1>",191],["^ ","^1=",14,"^1>",191],["^ ","^1=",0,"^1>",192],["^ ","^1=",0,"^1>",192],["^ ","^1=",8,"^1>",192,"^D","G__4927"],["^ ","^1=",5,"^1>",193],["^ ","^1=",0,"^1>",194],["^ ","^1=",7,"^1>",194,"^D","promesa.core/error"],["^ ","^1=",56,"^1>",194],["^ ","^1=",57,"^1>",194],["^ ","^1=",67,"^1>",194],["^ ","^1=",73,"^1>",194],["^ ","^1=",74,"^1>",194],["^ ","^1=",84,"^1>",194],["^ ","^1=",5,"^1>",197],["^ ","^1=",0,"^1>",198],["^ ","^1=",7,"^1>",198,"^D","promesa.core/error"],["^ ","^1=",56,"^1>",198],["^ ","^1=",57,"^1>",198],["^ ","^1=",67,"^1>",198],["^ ","^1=",73,"^1>",198],["^ ","^1=",74,"^1>",198],["^ ","^1=",84,"^1>",198],["^ ","^1=",90,"^1>",198],["^ ","^1=",91,"^1>",198],["^ ","^1=",101,"^1>",198],["^ ","^1=",0,"^1>",202],["^ ","^1=",6,"^1>",202],["^ ","^1=",11,"^1>",202,"^D","js/Error"],["^ ","^1=",17,"^1>",202],["^ ","^1=",18,"^1>",202],["^ ","^1=",80,"^1>",202],["^ ","^1=",80,"^1>",202],["^ ","^1=",0,"^1>",207],["^ ","^1=",0,"^1>",207],["^ ","^1=",51,"^1>",207],["^ ","^1=",0,"^1>",208],["^ ","^1=",0,"^1>",211],["^ ","^1=",0,"^1>",211],["^ ","^1=",51,"^1>",211],["^ ","^1=",0,"^1>",212],["^ ","^1=",0,"^1>",215],["^ ","^1=",0,"^1>",215],["^ ","^1=",45,"^1>",215],["^ ","^1=",0,"^1>",217]],"~i6",[["^ ","^1=",0,"^1>",190,"^D","promesa.core/error"],["^ ","^1=",0,"^1>",207,"^D","promesa.core/error"],["^ ","^1=",0,"^1>",211,"^D","promesa.core/error"],["^ ","^1=",0,"^1>",215,"^D","promesa.core/error"]]],"~i169",["^ ","~i4",[["^ ","^1=",62,"^1>",207,"^D","f"]],"~i6",[["^ ","^1=",64,"^1>",207,"^D","p"]],"~i9",[["^ ","^1=",0,"^1>",208]],"~i10",[["^ ","^1=",7,"^1>",208,"^D","promesa.core.catch$.cljs$core$IFn$_invoke$arity$2"]],"^21",[["^ ","^1=",57,"^1>",208,"^D","p"]],"^1E",[["^ ","^1=",59,"^1>",208,"^D","f"]]],"~i170",["^ ","~i4",[["^ ","^1=",62,"^1>",211,"^D","f"]],"~i6",[["^ ","^1=",64,"^1>",211,"^D","type"]],"^1S",[["^ ","^1=",69,"^1>",211,"^D","p"]],"^27",[["^ ","^1=",0,"^1>",212]],"^1D",[["^ ","^1=",7,"^1>",212,"^D","promesa.core.catch$.cljs$core$IFn$_invoke$arity$3"]],"^2W",[["^ ","^1=",57,"^1>",212,"^D","p"]],"^31",[["^ ","^1=",59,"^1>",212,"^D","type"]],"~i28",[["^ ","^1=",64,"^1>",212,"^D","f"]]],"~i172",["^ ","~i0",[["^ ","^1=",0,"^1>",217]],"~i5",[["^ ","^1=",0,"^1>",220,"^D","promesa.core/err"]]],"~i174",["^ ","~i2",[["^ ","^1=",19,"^1>",220,"^D","promesa.core/error"]]],"~i176",["^ ","~i0",[["^ ","^1=",0,"^1>",221],["^ ","^1=",24,"^1>",226],["^ ","^1=",0,"^1>",227]],"~i6",[["^ ","^1=",0,"^1>",226,"^D","promesa.core/finally"]]],"~i180",["^ ","~i3",[["^ ","^1=",55,"^1>",226,"^D","p"]],"~i5",[["^ ","^1=",57,"^1>",226,"^D","callback"]]],"~i184",["^ ","^1S",[["^ ","^1=",0,"^1>",227]],"^2F",[["^ ","^1=",7,"^1>",227,"^D","p"]],"^1?",[["^ ","^1=",16,"^1>",227,"^D","callback"]]],"~i186",["^ ","~i0",[["^ ","^1=",0,"^1>",229],["^ ","^1=",19,"^1>",247],["^ ","^1=",0,"^1>",248]],"~i6",[["^ ","^1=",0,"^1>",247,"^D","promesa.core/all"]]],"~i203",["^ ","~i3",[["^ ","^1=",46,"^1>",247,"^D","promises"]]],"~i204",["^ ","^1D",[["^ ","^1=",25,"^1>",248]],"^2W",[["^ ","^1=",25,"^1>",248,"^D","promesa.core/Promise"]],"~i29",[["^ ","^1=",50,"^1>",248]],"^1@",[["^ ","^1=",50,"^1>",248,"^D","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1"]],"~i41",[["^ ","^1=",101,"^1>",248,"^D","promises"]]],"~i205",["^ ","^1D",[["^ ","^1=",0,"^1>",248]],"^21",[["^ ","^1=",7,"^1>",248,"^D","promesa.core/then"]],"^2W",[["^ ","^1=",112,"^1>",248,"^D","cljs.core/vec"]]],"~i212",["^ ","~i0",[["^ ","^1=",0,"^1>",250],["^ ","^1=",19,"^1>",255],["^ ","^1=",0,"^1>",256]],"~i6",[["^ ","^1=",0,"^1>",255,"^D","promesa.core/any"]]],"~i216",["^ ","~i3",[["^ ","^1=",46,"^1>",255,"^D","promises"]]],"~i217",["^ ","^1S",[["^ ","^1=",0,"^1>",256]],"^1I",[["^ ","^1=",7,"^1>",256,"^D","promesa.core/Promise"]],"^33",[["^ ","^1=",32,"^1>",256]],"^2K",[["^ ","^1=",32,"^1>",256,"^D","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1"]],"^37",[["^ ","^1=",83,"^1>",256,"^D","promises"]]],"~i224",["^ ","~i0",[["^ ","^1=",0,"^1>",258],["^ ","^1=",28,"^1>",261],["^ ","^1=",0,"^1>",262]],"~i6",[["^ ","^1=",0,"^1>",261,"^D","promesa.core/cancel!"]]],"~i226",["^ ","~i3",[["^ ","^1=",64,"^1>",261,"^D","p"]]],"~i227",["^ ","~i2",[["^ ","^1=",0,"^1>",262]],"~i3",[["^ ","^1=",0,"^1>",262,"^D","promesa.protocols/-cancel"]],"^27",[["^ ","^1=",26,"^1>",262,"^D","p"]]],"~i228",["^ ","~i2",[["^ ","^1=",0,"^1>",264,"^D","p"]]],"~i230",["^ ","~i0",[["^ ","^1=",0,"^1>",266],["^ ","^1=",32,"^1>",269],["^ ","^1=",0,"^1>",270]],"~i6",[["^ ","^1=",0,"^1>",269,"^D","promesa.core/cancelled?"]]],"~i232",["^ ","~i3",[["^ ","^1=",72,"^1>",269,"^D","v"]]],"~i233",["^ ","~i2",[["^ ","^1=",0,"^1>",270]],"~i3",[["^ ","^1=",7,"^1>",270,"^D","promesa.protocols/-cancelled?"]],"^1E",[["^ ","^1=",43,"^1>",270,"^D","v"]]],"~i237",["^ ","~i0",[["^ ","^1=",0,"^1>",272],["^ ","^1=",25,"^1>",277],["^ ","^1=",0,"^1>",278]],"~i6",[["^ ","^1=",0,"^1>",277,"^D","promesa.core/promisify"]]],"~i241",["^ ","~i3",[["^ ","^1=",58,"^1>",277,"^D","callable"]]],"~i242",["^ ","~i2",[["^ ","^1=",0,"^1>",278],["^ ","^1=",0,"^1>",280]],"~i9",[["^ ","^1=",34,"^1>",279,"^D","args"],["^ ","^1=",4,"^1>",293,"^D","args"],["^ ","^1=",2,"^1>",297,"^D","args"],["^ ","^1=",35,"^1>",299,"^D","args"],["^ ","^1=",4,"^1>",302,"^D","args"],["^ ","^1=",25,"^1>",303,"^D","args"]]],"~i243",["^ ","~i4",[["^ ","^1=",0,"^1>",280]],"~i5",[["^ ","^1=",7,"^1>",280,"^D","promesa.core/promise"]],"^2;",[["^ ","^1=",28,"^1>",280],["^ ","^1=",0,"^1>",281]],"^1E",[["^ ","^1=",39,"^1>",280,"^D","resolve"]],"^2K",[["^ ","^1=",47,"^1>",280,"^D","reject"]]],"~i244",["^ ","^1D",[["^ ","^1=",0,"^1>",281],["^ ","^1=",0,"^1>",282]],"^2W",[["^ ","^1=",4,"^1>",281,"^D","args"]],"^1@",[["^ ","^1=",60,"^1>",281]],"^2[",[["^ ","^1=",60,"^1>",281,"^D","cljs.core/vec"]],"~i35",[["^ ","^1=",74,"^1>",281,"^D","args"]]],"~i245",["^ ","^1@",[["^ ","^1=",15,"^1>",281]],"^2[",[["^ ","^1=",15,"^1>",281,"^D","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"~i36",[["^ ","^1=",80,"^1>",281,"^D","resolve"]]],"~i246",["^ ","^1I",[["^ ","^1=",0,"^1>",282],["^ ","^1=",4,"^1>",282],["^ ","^1=",15,"^1>",283],["^ ","^1=",18,"^1>",283],["^ ","^1=",19,"^1>",283,"^D","e4954"],["^ ","^1=",0,"^1>",284],["^ ","^1=",8,"^1>",284,"^D","e4954"],["^ ","^1=",0,"^1>",285],["^ ","^1=",0,"^1>",287],["^ ","^1=",0,"^1>",287],["^ ","^1=",6,"^1>",287,"^D","e4954"]]],"~i247",["^ ","^2U",[["^ ","^1=",4,"^1>",282]],"^2F",[["^ ","^1=",11,"^1>",282,"^D","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"^2K",[["^ ","^1=",57,"^1>",282,"^D","callable"]],"^3W",[["^ ","^1=",66,"^1>",282,"^D","args"]]],"~i248",["^ ","~i50",[["^ ","^1=",36,"^1>",283,"^D","js/Error"]],"^1H",[["^ ","^1=",4,"^1>",284,"^D","e"]]],"~i249",["^ ","^31",[["^ ","^1=",0,"^1>",285]],"^2J",[["^ ","^1=",8,"^1>",285,"^D","reject"],["^ ","^1=",47,"^1>",285,"^D","reject"],["^ ","^1=",89,"^1>",285,"^D","reject"]],"^2[",[["^ ","^1=",84,"^1>",285,"^D","e"],["^ ","^1=",106,"^1>",285,"^D","e"]]],"~i252",["^ ","~i3",[["^ ","^1=",0,"^1>",310],["^ ","^1=",0,"^1>",310],["^ ","^1=",23,"^1>",317],["^ ","^1=",54,"^1>",317,"^D","var_args"],["^ ","^1=",0,"^1>",318],["^ ","^1=",0,"^1>",318],["^ ","^1=",4,"^1>",318,"^D","G__4965"],["^ ","^1=",14,"^1>",318],["^ ","^1=",14,"^1>",318],["^ ","^1=",0,"^1>",319],["^ ","^1=",0,"^1>",319],["^ ","^1=",8,"^1>",319,"^D","G__4965"],["^ ","^1=",5,"^1>",320],["^ ","^1=",0,"^1>",321],["^ ","^1=",7,"^1>",321,"^D","promesa.core/timeout"],["^ ","^1=",58,"^1>",321],["^ ","^1=",59,"^1>",321],["^ ","^1=",69,"^1>",321],["^ ","^1=",75,"^1>",321],["^ ","^1=",76,"^1>",321],["^ ","^1=",86,"^1>",321],["^ ","^1=",5,"^1>",324],["^ ","^1=",0,"^1>",325],["^ ","^1=",7,"^1>",325,"^D","promesa.core/timeout"],["^ ","^1=",58,"^1>",325],["^ ","^1=",59,"^1>",325],["^ ","^1=",69,"^1>",325],["^ ","^1=",75,"^1>",325],["^ ","^1=",76,"^1>",325],["^ ","^1=",86,"^1>",325],["^ ","^1=",92,"^1>",325],["^ ","^1=",93,"^1>",325],["^ ","^1=",103,"^1>",325],["^ ","^1=",0,"^1>",329],["^ ","^1=",6,"^1>",329],["^ ","^1=",11,"^1>",329,"^D","js/Error"],["^ ","^1=",17,"^1>",329],["^ ","^1=",18,"^1>",329],["^ ","^1=",80,"^1>",329],["^ ","^1=",80,"^1>",329],["^ ","^1=",0,"^1>",334],["^ ","^1=",0,"^1>",334],["^ ","^1=",53,"^1>",334],["^ ","^1=",0,"^1>",335],["^ ","^1=",0,"^1>",338],["^ ","^1=",0,"^1>",338],["^ ","^1=",53,"^1>",338],["^ ","^1=",0,"^1>",339],["^ ","^1=",0,"^1>",342],["^ ","^1=",0,"^1>",342],["^ ","^1=",47,"^1>",342],["^ ","^1=",0,"^1>",344]],"~i9",[["^ ","^1=",0,"^1>",317,"^D","promesa.core/timeout"],["^ ","^1=",0,"^1>",334,"^D","promesa.core/timeout"],["^ ","^1=",0,"^1>",338,"^D","promesa.core/timeout"],["^ ","^1=",0,"^1>",342,"^D","promesa.core/timeout"]]],"~i258",["^ ","~i7",[["^ ","^1=",64,"^1>",334,"^D","p"]],"~i9",[["^ ","^1=",66,"^1>",334,"^D","t"]],"^2?",[["^ ","^1=",0,"^1>",335]],"^1?",[["^ ","^1=",7,"^1>",335,"^D","p"]],"^2J",[["^ ","^1=",17,"^1>",335,"^D","t"]]],"~i259",["^ ","~i7",[["^ ","^1=",64,"^1>",338,"^D","p"]],"~i9",[["^ ","^1=",66,"^1>",338,"^D","t"]],"^1S",[["^ ","^1=",68,"^1>",338,"^D","v"]],"^27",[["^ ","^1=",0,"^1>",339]],"^2J",[["^ ","^1=",7,"^1>",339,"^D","p"]],"^2K",[["^ ","^1=",17,"^1>",339,"^D","t"]],"^3<",[["^ ","^1=",19,"^1>",339,"^D","v"]]],"~i261",["^ ","~i0",[["^ ","^1=",0,"^1>",344],["^ ","^1=",0,"^1>",344],["^ ","^1=",21,"^1>",350],["^ ","^1=",50,"^1>",350,"^D","var_args"],["^ ","^1=",0,"^1>",351],["^ ","^1=",0,"^1>",351],["^ ","^1=",4,"^1>",351,"^D","G__4981"],["^ ","^1=",14,"^1>",351],["^ ","^1=",14,"^1>",351],["^ ","^1=",0,"^1>",352],["^ ","^1=",0,"^1>",352],["^ ","^1=",8,"^1>",352,"^D","G__4981"],["^ ","^1=",5,"^1>",353],["^ ","^1=",0,"^1>",354],["^ ","^1=",7,"^1>",354,"^D","promesa.core/delay"],["^ ","^1=",56,"^1>",354],["^ ","^1=",57,"^1>",354],["^ ","^1=",67,"^1>",354],["^ ","^1=",5,"^1>",357],["^ ","^1=",0,"^1>",358],["^ ","^1=",7,"^1>",358,"^D","promesa.core/delay"],["^ ","^1=",56,"^1>",358],["^ ","^1=",57,"^1>",358],["^ ","^1=",67,"^1>",358],["^ ","^1=",73,"^1>",358],["^ ","^1=",74,"^1>",358],["^ ","^1=",84,"^1>",358],["^ ","^1=",0,"^1>",362],["^ ","^1=",6,"^1>",362],["^ ","^1=",11,"^1>",362,"^D","js/Error"],["^ ","^1=",17,"^1>",362],["^ ","^1=",18,"^1>",362],["^ ","^1=",80,"^1>",362],["^ ","^1=",80,"^1>",362],["^ ","^1=",0,"^1>",367],["^ ","^1=",0,"^1>",367],["^ ","^1=",51,"^1>",367],["^ ","^1=",0,"^1>",368],["^ ","^1=",0,"^1>",371],["^ ","^1=",0,"^1>",371],["^ ","^1=",51,"^1>",371],["^ ","^1=",0,"^1>",372],["^ ","^1=",0,"^1>",379],["^ ","^1=",0,"^1>",379],["^ ","^1=",45,"^1>",379],["^ ","^1=",0,"^1>",381]],"~i6",[["^ ","^1=",0,"^1>",350,"^D","promesa.core/delay"],["^ ","^1=",0,"^1>",367,"^D","promesa.core/delay"],["^ ","^1=",0,"^1>",371,"^D","promesa.core/delay"],["^ ","^1=",0,"^1>",379,"^D","promesa.core/delay"]]],"~i266",["^ ","~i4",[["^ ","^1=",62,"^1>",367,"^D","t"]],"~i7",[["^ ","^1=",0,"^1>",368],["^ ","^1=",58,"^1>",368]],"~i8",[["^ ","^1=",7,"^1>",368,"^D","promesa.core.delay.cljs$core$IFn$_invoke$arity$2"]],"^27",[["^ ","^1=",56,"^1>",368,"^D","t"]]],"~i267",["^ ","~i4",[["^ ","^1=",62,"^1>",371,"^D","t"]],"~i6",[["^ ","^1=",64,"^1>",371,"^D","v"]]],"~i268",["^ ","^2?",[["^ ","^1=",0,"^1>",372]],"^2;",[["^ ","^1=",7,"^1>",372,"^D","promesa.core/promise"]],"^2W",[["^ ","^1=",28,"^1>",372],["^ ","^1=",0,"^1>",373]],"^2K",[["^ ","^1=",39,"^1>",372,"^D","resolve"]],"~i34",[["^ ","^1=",47,"^1>",372,"^D","reject"]]],"~i269",["^ ","^31",[["^ ","^1=",0,"^1>",373],["^ ","^1=",31,"^1>",373],["^ ","^1=",0,"^1>",374]],"^2J",[["^ ","^1=",7,"^1>",373,"^D","promesa.core/schedule"]],"^34",[["^ ","^1=",29,"^1>",373,"^D","t"]],"^3Y",[["^ ","^1=",0,"^1>",374]],"^37",[["^ ","^1=",8,"^1>",374,"^D","resolve"],["^ ","^1=",48,"^1>",374,"^D","resolve"],["^ ","^1=",91,"^1>",374,"^D","resolve"]],"~i45",[["^ ","^1=",86,"^1>",374,"^D","v"],["^ ","^1=",109,"^1>",374,"^D","v"]]],"~i275",["^ ","~i0",[["^ ","^1=",0,"^1>",381],["^ ","^1=",23,"^1>",386],["^ ","^1=",0,"^1>",387]],"~i6",[["^ ","^1=",0,"^1>",386,"^D","promesa.core/attempt"]]],"~i279",["^ ","~i3",[["^ ","^1=",54,"^1>",386,"^D","callback"]]],"~i280",["^ ","^1S",[["^ ","^1=",0,"^1>",387]],"^2?",[["^ ","^1=",7,"^1>",387,"^D","promesa.core/promise"]],"^2F",[["^ ","^1=",28,"^1>",387],["^ ","^1=",0,"^1>",388]],"^33",[["^ ","^1=",39,"^1>",387,"^D","resolve"]],"^4:",[["^ ","^1=",0,"^1>",388],["^ ","^1=",4,"^1>",388,"^D","G__4987"],["^ ","^1=",0,"^1>",389],["^ ","^1=",0,"^1>",389],["^ ","^1=",86,"^1>",389,"^D","G__4987"],["^ ","^1=",115,"^1>",389,"^D","G__4987"]],"^3W",[["^ ","^1=",8,"^1>",389,"^D","resolve"],["^ ","^1=",48,"^1>",389,"^D","resolve"],["^ ","^1=",97,"^1>",389,"^D","resolve"]],"~i43",[["^ ","^1=",14,"^1>",388]],"~i44",[["^ ","^1=",15,"^1>",388,"^D","callback"],["^ ","^1=",56,"^1>",388,"^D","callback"],["^ ","^1=",99,"^1>",388,"^D","callback"]]],"~i293",["^ ","~i0",[["^ ","^1=",0,"^1>",392],["^ ","^1=",0,"^1>",392],["^ ","^1=",22,"^1>",392],["^ ","^1=",51,"^1>",392,"^D","var_args"],["^ ","^1=",0,"^1>",393],["^ ","^1=",0,"^1>",393],["^ ","^1=",4,"^1>",393,"^D","args__4534__auto__"],["^ ","^1=",25,"^1>",393],["^ ","^1=",0,"^1>",394],["^ ","^1=",0,"^1>",394],["^ ","^1=",4,"^1>",394,"^D","len__4531__auto__"],["^ ","^1=",29,"^1>",394],["^ ","^1=",29,"^1>",394],["^ ","^1=",0,"^1>",395],["^ ","^1=",0,"^1>",395],["^ ","^1=",4,"^1>",395,"^D","i__4532__auto__"],["^ ","^1=",27,"^1>",395],["^ ","^1=",0,"^1>",397],["^ ","^1=",0,"^1>",397],["^ ","^1=",3,"^1>",397],["^ ","^1=",4,"^1>",397,"^D","i__4532__auto__"],["^ ","^1=",27,"^1>",397,"^D","len__4531__auto__"],["^ ","^1=",0,"^1>",398],["^ ","^1=",0,"^1>",398],["^ ","^1=",0,"^1>",398,"^D","args__4534__auto__"],["^ ","^1=",24,"^1>",398],["^ ","^1=",25,"^1>",398],["^ ","^1=",35,"^1>",398,"^D","i__4532__auto__"],["^ ","^1=",0,"^1>",400],["^ ","^1=",14,"^1>",400],["^ ","^1=",15,"^1>",400,"^D","i__4532__auto__"],["^ ","^1=",38,"^1>",400],["^ ","^1=",0,"^1>",404],["^ ","^1=",0,"^1>",408],["^ ","^1=",4,"^1>",408,"^D","argseq__4535__auto__"],["^ ","^1=",27,"^1>",408],["^ ","^1=",29,"^1>",408],["^ ","^1=",30,"^1>",408],["^ ","^1=",36,"^1>",408],["^ ","^1=",36,"^1>",408,"^D","args__4534__auto__"],["^ ","^1=",64,"^1>",408],["^ ","^1=",64,"^1>",408],["^ ","^1=",69,"^1>",408,"^D","cljs.core/IndexedSeq"],["^ ","^1=",90,"^1>",408],["^ ","^1=",90,"^1>",408,"^D","args__4534__auto__"],["^ ","^1=",115,"^1>",408],["^ ","^1=",120,"^1>",408],["^ ","^1=",124,"^1>",408],["^ ","^1=",131,"^1>",408],["^ ","^1=",0,"^1>",409],["^ ","^1=",0,"^1>",409],["^ ","^1=",7,"^1>",409,"^D","promesa.core/await"],["^ ","^1=",64,"^1>",409,"^D","argseq__4535__auto__"],["^ ","^1=",0,"^1>",412],["^ ","^1=",0,"^1>",412],["^ ","^1=",0,"^1>",412],["^ ","^1=",0,"^1>",412,"^D","promesa.core/await"],["^ ","^1=",59,"^1>",412],["^ ","^1=",0,"^1>",413],["^ ","^1=",0,"^1>",416],["^ ","^1=",0,"^1>",416],["^ ","^1=",0,"^1>",416,"^D","promesa.core/await"],["^ ","^1=",46,"^1>",416],["^ ","^1=",0,"^1>",418],["^ ","^1=",0,"^1>",419],["^ ","^1=",0,"^1>",419],["^ ","^1=",0,"^1>",419,"^D","promesa.core/await"],["^ ","^1=",40,"^1>",419],["^ ","^1=",51,"^1>",419,"^D","seq4991"],["^ ","^1=",0,"^1>",420],["^ ","^1=",0,"^1>",420],["^ ","^1=",4,"^1>",420,"^D","self__4519__auto__"],["^ ","^1=",25,"^1>",420],["^ ","^1=",0,"^1>",421],["^ ","^1=",0,"^1>",421],["^ ","^1=",7,"^1>",421,"^D","self__4519__auto__"],["^ ","^1=",63,"^1>",421],["^ ","^1=",63,"^1>",421,"^D","cljs.core/seq"],["^ ","^1=",77,"^1>",421,"^D","seq4991"],["^ ","^1=",0,"^1>",424]],"~i6",[["^ ","^1=",0,"^1>",392,"^D","promesa.core/await"]]],"~i294",["^ ","~i5",[["^ ","^1=",70,"^1>",412,"^D","args"]]],"~i295",["^ ","~i2",[["^ ","^1=",0,"^1>",413]],"~i9",[["^ ","^1=",6,"^1>",413],["^ ","^1=",54,"^1>",413],["^ ","^1=",91,"^1>",413]],"^3:",[["^ ","^1=",6,"^1>",413,"^D","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^P"],[1534380137000],["^14","goog/math/math.js"],[1530991559994,"^Q","~$goog.array","~$goog.asserts"],["^14","goog/array/array.js"],[1530991559994,"^Q","^4J"],["^14","goog/debug/error.js"],[1530991559994,"^Q"],["^14","promesa/impl/scheduler.cljc"],[1535586406328,"^Q","^P","^J"],["^14","promesa/impl.cljc"],[1535586406328,"^Q","^P","^J","~$org.bluebird"],["^14","goog/dom/nodetype.js"],[1530991559994,"^Q"],["^14","goog/object/object.js"],[1530991559994,"^Q"],"~:SHADOW-TIMESTAMP",[1537724577000,1534380137000],["^14","goog/math/long.js"],[1530991559994,"^Q","^4J","~$goog.reflect"],["^14","goog/functions/functions.js"],[1530991559994,"^Q"],["^14","goog/structs/map.js"],[1530991559994,"^Q","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["~:shadow.build.js-support/require","bluebird"],["~$shadow.js.shim.module$bluebird","shadow.js.shim.module$bluebird.js","^Q"],["^14","goog/asserts/asserts.js"],[1530991559994,"^Q","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^14","goog/uri/uri.js"],[1530991559994,"^Q","^4I","^4J","^4U","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^14","goog/base.js"],[1530991559994],["^14","promesa/core.cljc"],[1535586406328,"^Q","^P","^J","^L","^N"],["^14","goog/structs/structs.js"],[1530991559994,"^Q","^4I","^4P"],["^14","org/bluebird.cljs"],[1535669979047,"^Q","^P","^4R"],["^14","goog/string/string.js"],[1530991559994,"^Q"],["^14","goog/reflect/reflect.js"],[1530991559994,"^Q"],["^14","goog/string/stringbuffer.js"],[1530991559994,"^Q"],["^14","promesa/protocols.cljc"],[1535586406328,"^Q","^P"],["^14","goog/iter/iter.js"],[1530991559994,"^Q","^4I","^4J","~$goog.functions","~$goog.math"],["^14","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^4U","^4P","^4I","~$goog.Uri","~$goog.string.StringBuffer"],["^14","goog/math/integer.js"],[1530991559994,"^Q"],["^14","goog/uri/utils.js"],[1530991559994,"^Q","^4I","^4J","^4U"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","promesa/core.cljc","^7",25,"^8",5,"^9",25,"^:",17],"^;",null,"^<",["^=",["^>","^?","^@","^A","^B","^C"]],"~:shadow/js-access-properties",["^=",["any"]],"^D","^E","^H",null,"^I",["^ ","^J","^J","^K","^J","^L","^L","^M","^L","^N","^N","^O","^N","^P","^P","^Q","^Q"],"^R",["^=",["^S"]],"~:shadow/js-access-global",["^=",["Error"]],"^T",null,"~:defs",["^ ","~$timeout",["^ ","~:protocol-inline",null,"^5",["^ ","^6","promesa/core.cljc","^7",253,"^8",10,"^9",253,"^:",17,"~:arglists",["^W",["~$quote",["^W",[["~$p","~$t"],["~$p","~$t","~$v"]]]]],"~:doc","Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError","~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",3,"~:method-params",["^W",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5;",["^W",[["~$p","~$t"],["~$p","~$t","~$v"]]],"~:arglists-meta",["^W",[null,null]]]],"^D","~$promesa.core/timeout","^5?",false,"^6","promesa/core.cljc","^:",17,"^5>",["^ ","^5?",false,"^5@",3,"^5A",["^W",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5;",["^W",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5B",["^W",[null,null]]],"^5A",["^W",[["~$p","~$t"],["~$p","~$t","~$v"]]],"~:protocol-impl",null,"^5B",["^W",[null,null]],"^8",4,"^7",253,"^9",253,"^5@",3,"~:fn-var",true,"^5;",["^W",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5=","Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError"],"~$Promise",["^ ","^D","~$promesa.core/Promise","^6","promesa/core.cljc","^7",43,"^8",10,"^9",43,"^:",30,"~:const",true,"^5",["^ ","^6","promesa/core.cljc","^7",43,"^8",23,"^9",43,"^:",30,"^5H",true],"~:tag","~$js"],"~$branch",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",149,"^8",7,"^9",149,"^:",13,"^5;",["^W",["^5<",["^W",[["~$p","~$success","~$failure"]]]]]],"^D","~$promesa.core/branch","^5?",false,"^6","promesa/core.cljc","^:",13,"^5A",["^W",[["~$p","^5L","^5M"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",149,"^9",149,"^5@",3,"^5E",true,"^5;",["^W",["^5<",["^W",[["~$p","^5L","^5M"]]]]]],"~$attempt",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",276,"^8",7,"^9",276,"^:",14,"^5;",["^W",["^5<",["^W",[["~$callback"]]]]],"^5=","A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback."],"^D","~$promesa.core/attempt","^5?",false,"^6","promesa/core.cljc","^:",14,"^5A",["^W",[["^5P"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",276,"^9",276,"^5@",1,"^5E",true,"^5;",["^W",["^5<",["^W",[["^5P"]]]]],"^5=","A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback."],"^>",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",107,"^8",7,"^9",107,"^:",10,"^5;",["^W",["^5<",["^W",[["~$f","~$p"]]]]],"^5=","Apply a function to the promise value and\n  return a new promise with the result."],"^D","~$promesa.core/map","^5?",false,"^6","promesa/core.cljc","^:",10,"^5A",["^W",[["~$f","~$p"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",107,"^9",107,"^5@",2,"^5E",true,"^5;",["^W",["^5<",["^W",[["~$f","~$p"]]]]],"^5=","Apply a function to the promise value and\n  return a new promise with the result."],"^?",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",262,"^8",7,"^9",262,"^:",12,"^5;",["^W",["^5<",["^W",[["~$t"],["~$t","~$v"]]]]],"^5=","Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached.","^5>",["^ ","^5?",false,"^5@",2,"^5A",["^W",[["~$t"],["~$t","~$v"]]],"^5;",["^W",[["~$t"],["~$t","~$v"]]],"^5B",["^W",[null,null]]]],"^D","~$promesa.core/delay","^5?",false,"^6","promesa/core.cljc","^:",12,"^5>",["^ ","^5?",false,"^5@",2,"^5A",["^W",[["~$t"],["~$t","~$v"]]],"^5;",["^W",[["~$t"],["~$t","~$v"]]],"^5B",["^W",[null,null]]],"^5A",["^W",[["~$t"],["~$t","~$v"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",262,"^9",262,"^5@",2,"^5E",true,"^5;",["^W",[["~$t"],["~$t","~$v"]]],"^5=","Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached."],"~$resolved?",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",81,"^8",7,"^9",81,"^:",16,"^5;",["^W",["^5<",["^W",[["~$p"]]]]],"^5=","Returns true if promise `p` is already fulfilled."],"^D","~$promesa.core/resolved?","^5?",false,"^6","promesa/core.cljc","^:",16,"^5A",["^W",[["~$p"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",81,"^9",81,"^5@",1,"^5E",true,"^5;",["^W",["^5<",["^W",[["~$p"]]]]],"^5=","Returns true if promise `p` is already fulfilled."],"^@",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",113,"^8",7,"^9",113,"^:",13,"^5;",["^W",["^5<",["^W",[["~$f","~$p"]]]]],"^5=","Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator."],"^D","~$promesa.core/mapcat","^5?",false,"^6","promesa/core.cljc","^:",13,"^5A",["^W",[["~$f","~$p"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",113,"^9",113,"^5@",2,"^5E",true,"^5;",["^W",["^5<",["^W",[["~$f","~$p"]]]]],"^5=","Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator."],"~$cancelled?",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",231,"^8",7,"^9",231,"^:",17,"^5;",["^W",["^5<",["^W",[["~$v"]]]]],"^5=","Return true if `v` is a cancelled promise."],"^D","~$promesa.core/cancelled?","^5?",false,"^6","promesa/core.cljc","^:",17,"^5A",["^W",[["~$v"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",231,"^9",231,"^5@",1,"^5E",true,"^5;",["^W",["^5<",["^W",[["~$v"]]]]],"^5=","Return true if `v` is a cancelled promise."],"^A",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",294,"^8",7,"^9",294,"^:",12,"^5;",["^W",["^5<",["^W",[["~$&","~$args"]]]]],"^5>",["^ ","^5?",true,"^5@",0,"^5A",[["^W",["^5Y"]]],"^5;",["^W",[["~$&","^5Y"]]],"^5B",["^W",[null]]]],"^D","~$promesa.core/await","^5?",true,"^6","promesa/core.cljc","^:",12,"^5>",["^ ","^5?",true,"^5@",0,"^5A",[["^W",["^5Y"]]],"^5;",["^W",[["~$&","^5Y"]]],"^5B",["^W",[null]]],"^5A",[["^W",["^5Y"]]],"^5D",null,"^5B",["^W",[null]],"^8",1,"^7",294,"^9",294,"^5@",0,"^5E",true,"^5;",["^W",[["~$&","^5Y"]]]],"~$bind",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",124,"^8",7,"^9",124,"^:",11,"^5;",["^W",["^5<",["^W",[["~$p","~$f"]]]]],"^5=","A chain helper for promises."],"^D","~$promesa.core/bind","^5?",false,"^6","promesa/core.cljc","^:",11,"^5A",["^W",[["~$p","~$f"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",124,"^9",124,"^5@",2,"^5E",true,"^5;",["^W",["^5<",["^W",[["~$p","~$f"]]]]],"^5=","A chain helper for promises."],"~$any",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",213,"^8",7,"^9",213,"^:",10,"^5;",["^W",["^5<",["^W",[["~$promises"]]]]],"^5=","Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled."],"^D","~$promesa.core/any","^5?",false,"^6","promesa/core.cljc","^:",10,"^5A",["^W",[["^62"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",213,"^9",213,"^5@",1,"^5E",true,"^5;",["^W",["^5<",["^W",[["^62"]]]]],"^5=","Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled."],"~$finally",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",177,"^8",7,"^9",177,"^:",14,"^5;",["^W",["^5<",["^W",[["~$p","^5P"]]]]],"^5=","Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected."],"^D","~$promesa.core/finally","^5?",false,"^6","promesa/core.cljc","^:",14,"^5A",["^W",[["~$p","^5P"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",177,"^9",177,"^5@",2,"^5E",true,"^5;",["^W",["^5<",["^W",[["~$p","^5P"]]]]],"^5=","Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected."],"~$schedule",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",47,"^8",7,"^9",47,"^:",15,"^5;",["^W",["^5<",["^W",[["~$ms","~$func"]]]]],"^5=","Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function."],"^D","~$promesa.core/schedule","^5?",false,"^6","promesa/core.cljc","^:",15,"^5A",["^W",[["^67","^68"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",47,"^9",47,"^5@",2,"^5E",true,"^5;",["^W",["^5<",["^W",[["^67","^68"]]]]],"^5=","Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function."],"~$promisify",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",238,"^8",7,"^9",238,"^:",16,"^5;",["^W",["^5<",["^W",[["~$callable"]]]]],"^5=","Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation)."],"^D","~$promesa.core/promisify","^5?",false,"^6","promesa/core.cljc","^:",16,"^5A",["^W",[["^6;"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",238,"^9",238,"^5@",1,"^5E",true,"^5;",["^W",["^5<",["^W",[["^6;"]]]]],"^5=","Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation)."],"~$rejected",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",63,"^8",7,"^9",63,"^:",15,"^5;",["^W",["^5<",["^W",[["~$v"]]]]],"^5=","Return a rejected promise with provided reason."],"^D","~$promesa.core/rejected","^5?",false,"^6","promesa/core.cljc","^:",15,"^5A",["^W",[["~$v"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",63,"^9",63,"^5@",1,"^5E",true,"^5;",["^W",["^5<",["^W",[["~$v"]]]]],"^5=","Return a rejected promise with provided reason."],"^C",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",68,"^8",7,"^9",68,"^:",14,"^5;",["^W",["^5<",["^W",[["~$v"]]]]],"^5=","The promise constructor."],"^D","~$promesa.core/promise","^5?",false,"^6","promesa/core.cljc","^:",14,"^5A",["^W",[["~$v"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",68,"^9",68,"^5@",1,"^5E",true,"^5;",["^W",["^5<",["^W",[["~$v"]]]]],"^5=","The promise constructor."],"~$cancel!",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",225,"^8",7,"^9",225,"^:",14,"^5;",["^W",["^5<",["^W",[["~$p"]]]]],"^5=","Cancel the promise."],"^D","~$promesa.core/cancel!","^5?",false,"^6","promesa/core.cljc","^:",14,"^5A",["^W",[["~$p"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",225,"^9",225,"^5@",1,"^5E",true,"^5;",["^W",["^5<",["^W",[["~$p"]]]]],"^5=","Cancel the promise."],"~$done?",["^ ","^D","~$promesa.core/done?","^6","promesa/core.cljc","^7",101,"^8",1,"^9",101,"^:",11,"^5",["^ ","^6","promesa/core.cljc","^7",101,"^8",6,"^9",101,"^:",11],"^5=","Returns true if promise `p` is already done.","^5I","^61"],"~$err",["^ ","^D","~$promesa.core/err","^6","promesa/core.cljc","^7",173,"^8",1,"^9",173,"^:",9,"^5",["^ ","^6","promesa/core.cljc","^7",173,"^8",6,"^9",173,"^:",9],"^5=","A short alias for `error` function."],"~$all",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",187,"^8",7,"^9",187,"^:",10,"^5;",["^W",["^5<",["^W",[["^62"]]]]],"^5=","Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled.\n\n  Example:\n\n  (-> (all [(promise :first-promise)\n            (promise :second-promise)]\n      (then (fn [[first-result second-result]]))\n       (println (str first-result \", \" second-result)\n\n  Will print out\n  :first-promise, :second-promise.\n\n  If at least one of the promises is rejected, the resulting promise will be\n  rejected."],"^D","~$promesa.core/all","^5?",false,"^6","promesa/core.cljc","^:",10,"^5A",["^W",[["^62"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",187,"^9",187,"^5@",1,"^5E",true,"^5;",["^W",["^5<",["^W",[["^62"]]]]],"^5=","Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled.\n\n  Example:\n\n  (-> (all [(promise :first-promise)\n            (promise :second-promise)]\n      (then (fn [[first-result second-result]]))\n       (println (str first-result \", \" second-result)\n\n  Will print out\n  :first-promise, :second-promise.\n\n  If at least one of the promises is rejected, the resulting promise will be\n  rejected."],"~$promise?",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",73,"^8",7,"^9",73,"^:",15,"^5;",["^W",["^5<",["^W",[["~$v"]]]]],"^5=","Return true if `v` is a promise instance."],"^D","~$promesa.core/promise?","^5?",false,"^6","promesa/core.cljc","^:",15,"^5A",["^W",[["~$v"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",73,"^9",73,"^5@",1,"^5E",true,"^5;",["^W",["^5<",["^W",[["~$v"]]]]],"^5=","Return true if `v` is a promise instance."],"~$resolved",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",58,"^8",7,"^9",58,"^:",15,"^5;",["^W",["^5<",["^W",[["~$v"]]]]],"^5=","Return a resolved promise with provided value."],"^D","~$promesa.core/resolved","^5?",false,"^6","promesa/core.cljc","^:",15,"^5A",["^W",[["~$v"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",58,"^9",58,"^5@",1,"^5E",true,"^5;",["^W",["^5<",["^W",[["~$v"]]]]],"^5=","Return a resolved promise with provided value."],"~$catch",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",155,"^8",7,"^9",155,"^:",12,"^5;",["^W",["^5<",["^W",[["~$p","~$f"],["~$p","~$pred-or-type","~$f"]]]]],"^5=","Catch all promise chain helper.","^5>",["^ ","^5?",false,"^5@",3,"^5A",["^W",[["~$p","~$f"],["~$p","^6M","~$f"]]],"^5;",["^W",[["~$p","~$f"],["~$p","^6M","~$f"]]],"^5B",["^W",[null,null]]]],"^D","~$promesa.core/catch","^5?",false,"^6","promesa/core.cljc","^:",12,"^5>",["^ ","^5?",false,"^5@",3,"^5A",["^W",[["~$p","~$f"],["~$p","^6M","~$f"]]],"^5;",["^W",[["~$p","~$f"],["~$p","^6M","~$f"]]],"^5B",["^W",[null,null]]],"^5A",["^W",[["~$p","~$f"],["~$p","^6M","~$f"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",155,"^9",155,"^5@",3,"^5E",true,"^5;",["^W",[["~$p","~$f"],["~$p","^6M","~$f"]]],"^5=","Catch all promise chain helper."],"~$chain",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",144,"^8",7,"^9",144,"^:",12,"^5;",["^W",["^5<",["^W",[["~$p","~$&","~$funcs"]]]]],"^5=","Like then but accepts multiple parameters.","^5>",["^ ","^5?",true,"^5@",1,"^5A",[["^W",["~$p","^6P"]]],"^5;",["^W",[["~$p","~$&","^6P"]]],"^5B",["^W",[null]]]],"^D","~$promesa.core/chain","^5?",true,"^6","promesa/core.cljc","^:",12,"^5>",["^ ","^5?",true,"^5@",1,"^5A",[["^W",["~$p","^6P"]]],"^5;",["^W",[["~$p","~$&","^6P"]]],"^5B",["^W",[null]]],"^5A",[["^W",["~$p","^6P"]]],"^5D",null,"^5B",["^W",[null]],"^8",1,"^7",144,"^9",144,"^5@",1,"^5E",true,"^5;",["^W",[["~$p","~$&","^6P"]]],"^5=","Like then but accepts multiple parameters."],"~$rejected?",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",86,"^8",7,"^9",86,"^:",16,"^5;",["^W",["^5<",["^W",[["~$p"]]]]],"^5=","Returns true if promise `p` is already rejected."],"^D","~$promesa.core/rejected?","^5?",false,"^6","promesa/core.cljc","^:",16,"^5A",["^W",[["~$p"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",86,"^9",86,"^5@",1,"^5E",true,"^5;",["^W",["^5<",["^W",[["~$p"]]]]],"^5=","Returns true if promise `p` is already rejected."],"~$then",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",129,"^8",7,"^9",129,"^:",11,"^5;",["^W",["^5<",["^W",[["~$p","~$f"]]]]],"^5=","Similar to `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator.\n\n  Unlike Clojure's `map`, will resolve any promises\n  returned  by `f`."],"^D","~$promesa.core/then","^5?",false,"^6","promesa/core.cljc","^:",11,"^5A",["^W",[["~$p","~$f"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",129,"^9",129,"^5@",2,"^5E",true,"^5;",["^W",["^5<",["^W",[["~$p","~$f"]]]]],"^5=","Similar to `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator.\n\n  Unlike Clojure's `map`, will resolve any promises\n  returned  by `f`."],"~$extract",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",96,"^8",7,"^9",96,"^:",14,"^5;",["^W",["^5<",["^W",[["~$p"]]]]],"^5=","Returns the current promise value."],"^D","~$promesa.core/extract","^5?",false,"^6","promesa/core.cljc","^:",14,"^5A",["^W",[["~$p"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",96,"^9",96,"^5@",1,"^5E",true,"^5;",["^W",["^5<",["^W",[["~$p"]]]]],"^5=","Returns the current promise value."],"~$error",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",168,"^8",7,"^9",168,"^:",12,"^5;",["^W",["^5<",["^W",[["~$f","~$p"],["~$f","~$type","~$p"]]]]],"^5=","Same as `catch` but with parameters inverted.","^5>",["^ ","^5?",false,"^5@",3,"^5A",["^W",[["~$f","~$p"],["~$f","^6Y","~$p"]]],"^5;",["^W",[["~$f","~$p"],["~$f","^6Y","~$p"]]],"^5B",["^W",[null,null]]]],"^D","~$promesa.core/error","^5?",false,"^6","promesa/core.cljc","^:",12,"^5>",["^ ","^5?",false,"^5@",3,"^5A",["^W",[["~$f","~$p"],["~$f","^6Y","~$p"]]],"^5;",["^W",[["~$f","~$p"],["~$f","^6Y","~$p"]]],"^5B",["^W",[null,null]]],"^5A",["^W",[["~$f","~$p"],["~$f","^6Y","~$p"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",168,"^9",168,"^5@",3,"^5E",true,"^5;",["^W",[["~$f","~$p"],["~$f","^6Y","~$p"]]],"^5=","Same as `catch` but with parameters inverted."],"~$pending?",["^ ","^5:",null,"^5",["^ ","^6","promesa/core.cljc","^7",91,"^8",7,"^9",91,"^:",15,"^5;",["^W",["^5<",["^W",[["~$p"]]]]],"^5=","Returns true if promise `p` is stil pending."],"^D","~$promesa.core/pending?","^5?",false,"^6","promesa/core.cljc","^:",15,"^5A",["^W",[["~$p"]]],"^5D",null,"^5B",["^W",[null,null]],"^8",1,"^7",91,"^9",91,"^5@",1,"^5E",true,"^5;",["^W",["^5<",["^W",[["~$p"]]]]],"^5=","Returns true if promise `p` is stil pending."]],"^U",["^ ","^P","^P"],"~:cljs.analyzer/constants",["^ ","^R",["^=",["~:else"]],"~:order",["^72"]],"^10",["^ ","^S",["^=",[]]],"^11",["^ "],"^12",["^Q","^P","^J","^L","^N"]],"^G","^E","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^4G",[["^76","~:static-fns"],true,["^76","~:elide-asserts"],false,["^76","~:optimize-constants"],null,["^76","~:external-config"],null,["^76","~:tooling-config"],null,["^76","~:emit-constants"],null,["^76","~:infer-externs"],true,["^76","^19"],null,["~:js-options","~:js-provider"],"^S",["~:mode"],"~:dev",["^76","~:fn-invoke-direct"],null,["^76","^1;"],"/dev/null"]]]